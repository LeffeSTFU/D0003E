
Lab4v2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  0000210a  0000219e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000210a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  0080014c  0080014c  000021ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000021ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000221c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  0000225c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b30  00000000  00000000  00002484  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001046  00000000  00000000  00004fb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015d2  00000000  00000000  00005ffa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b9c  00000000  00000000  000075cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000976  00000000  00000000  00008168  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000279c  00000000  00000000  00008ade  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000b27a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 9c 04 	jmp	0x938	; 0x938 <__vector_1>
       8:	0c 94 08 05 	jmp	0xa10	; 0xa10 <__vector_2>
       c:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__vector_3>
      10:	0c 94 e0 05 	jmp	0xbc0	; 0xbc0 <__vector_4>
      14:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 23 0d 	jmp	0x1a46	; 0x1a46 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__vector_9>
      28:	0c 94 b8 06 	jmp	0xd70	; 0xd70 <__vector_10>
      2c:	0c 94 24 07 	jmp	0xe48	; 0xe48 <__vector_11>
      30:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__vector_12>
      34:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <__vector_13>
      38:	0c 94 68 08 	jmp	0x10d0	; 0x10d0 <__vector_14>
      3c:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <__vector_15>
      40:	0c 94 40 09 	jmp	0x1280	; 0x1280 <__vector_16>
      44:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <__vector_17>
      48:	0c 94 18 0a 	jmp	0x1430	; 0x1430 <__vector_18>
      4c:	0c 94 84 0a 	jmp	0x1508	; 0x1508 <__vector_19>
      50:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__vector_20>
      54:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__vector_21>
      58:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ea e0       	ldi	r30, 0x0A	; 10
      70:	f1 e2       	ldi	r31, 0x21	; 33
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ac 34       	cpi	r26, 0x4C	; 76
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ac e4       	ldi	r26, 0x4C	; 76
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a3 3a       	cpi	r26, 0xA3	; 163
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 14 02 	call	0x428	; 0x428 <main>
      92:	0c 94 83 10 	jmp	0x2106	; 0x2106 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar>:


uint16_t arr[10] = {0x1551, 0x0110, 0x11e1, 0x11b1, 0x05b0, 0x14b1, 0x14f1, 0x1110, 0x15f1, 0x15b1};


void writeChar(char ch, int pos){
      9a:	ef 92       	push	r14
      9c:	ff 92       	push	r15
      9e:	0f 93       	push	r16
      a0:	1f 93       	push	r17
      a2:	cf 93       	push	r28
      a4:	df 93       	push	r29
      a6:	00 d0       	rcall	.+0      	; 0xa8 <writeChar+0xe>
      a8:	00 d0       	rcall	.+0      	; 0xaa <writeChar+0x10>
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
	uint8_t nibbles[4]; // Space for bits for each part of the number display
	uint16_t arrValue = arr[9-(57-ch)];	// saves the ascii value that ch represents
      ae:	e8 2f       	mov	r30, r24
      b0:	f0 e0       	ldi	r31, 0x00	; 0
      b2:	ee 0f       	add	r30, r30
      b4:	ff 1f       	adc	r31, r31
      b6:	e0 56       	subi	r30, 0x60	; 96
      b8:	ff 4f       	sbci	r31, 0xFF	; 255
      ba:	80 81       	ld	r24, Z
      bc:	91 81       	ldd	r25, Z+1	; 0x01
      be:	fe 01       	movw	r30, r28
      c0:	31 96       	adiw	r30, 0x01	; 1
      c2:	ae 01       	movw	r20, r28
      c4:	4b 5f       	subi	r20, 0xFB	; 251
      c6:	5f 4f       	sbci	r21, 0xFF	; 255
	
	for(uint8_t i = 0; i < 4; i++){	// loops and saves all the 4 sets of nibbles into the correct spots in the array
		nibbles[i] = arrValue & 0xf; // "and"s all the bits into the array
      c8:	28 2f       	mov	r18, r24
      ca:	2f 70       	andi	r18, 0x0F	; 15
      cc:	21 93       	st	Z+, r18
		arrValue = arrValue >> 4;
      ce:	92 95       	swap	r25
      d0:	82 95       	swap	r24
      d2:	8f 70       	andi	r24, 0x0F	; 15
      d4:	89 27       	eor	r24, r25
      d6:	9f 70       	andi	r25, 0x0F	; 15
      d8:	89 27       	eor	r24, r25

void writeChar(char ch, int pos){
	uint8_t nibbles[4]; // Space for bits for each part of the number display
	uint16_t arrValue = arr[9-(57-ch)];	// saves the ascii value that ch represents
	
	for(uint8_t i = 0; i < 4; i++){	// loops and saves all the 4 sets of nibbles into the correct spots in the array
      da:	e4 17       	cp	r30, r20
      dc:	f5 07       	cpc	r31, r21
      de:	a1 f7       	brne	.-24     	; 0xc8 <writeChar+0x2e>
		nibbles[i] = arrValue & 0xf; // "and"s all the bits into the array
		arrValue = arrValue >> 4;
	}
	
	if(pos >= 0 && pos <= 5){	// General opening for choosing which pos to place numbers in
      e0:	66 30       	cpi	r22, 0x06	; 6
      e2:	71 05       	cpc	r23, r1
      e4:	08 f0       	brcs	.+2      	; 0xe8 <writeChar+0x4e>
      e6:	50 c1       	rjmp	.+672    	; 0x388 <__EEPROM_REGION_LENGTH__+0x188>
		if(pos == 0){	// for pos 0:
      e8:	61 15       	cp	r22, r1
      ea:	71 05       	cpc	r23, r1
      ec:	59 f5       	brne	.+86     	; 0x144 <writeChar+0xaa>
			LCDDR0		= LCDDR0 & ~(0xf); // clear all registers by "and"ing (~(0xf) (same as 0x0))
      ee:	2c ee       	ldi	r18, 0xEC	; 236
      f0:	30 e0       	ldi	r19, 0x00	; 0
      f2:	f9 01       	movw	r30, r18
      f4:	80 81       	ld	r24, Z
      f6:	80 7f       	andi	r24, 0xF0	; 240
      f8:	80 83       	st	Z, r24
			LCDDR5		= LCDDR5 & ~(0xf);
      fa:	81 ef       	ldi	r24, 0xF1	; 241
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	fc 01       	movw	r30, r24
     100:	40 81       	ld	r20, Z
     102:	40 7f       	andi	r20, 0xF0	; 240
     104:	40 83       	st	Z, r20
			LCDDR10		= LCDDR10 & ~(0xf);
     106:	a6 ef       	ldi	r26, 0xF6	; 246
     108:	b0 e0       	ldi	r27, 0x00	; 0
     10a:	4c 91       	ld	r20, X
     10c:	40 7f       	andi	r20, 0xF0	; 240
     10e:	4c 93       	st	X, r20
			LCDDR15		= LCDDR15 & ~(0xf);
     110:	0b ef       	ldi	r16, 0xFB	; 251
     112:	10 e0       	ldi	r17, 0x00	; 0
     114:	f8 01       	movw	r30, r16
     116:	40 81       	ld	r20, Z
     118:	40 7f       	andi	r20, 0xF0	; 240
     11a:	40 83       	st	Z, r20
			
			LCDDR0		= LCDDR0 | nibbles[3]; // or in all of the new data and turn on the correct LCD segments
     11c:	f9 01       	movw	r30, r18
     11e:	50 81       	ld	r21, Z
     120:	4c 81       	ldd	r20, Y+4	; 0x04
     122:	45 2b       	or	r20, r21
     124:	40 83       	st	Z, r20
			LCDDR5		= LCDDR5 | nibbles[2];
     126:	fc 01       	movw	r30, r24
     128:	30 81       	ld	r19, Z
     12a:	2b 81       	ldd	r18, Y+3	; 0x03
     12c:	23 2b       	or	r18, r19
     12e:	20 83       	st	Z, r18
			LCDDR10		= LCDDR10 | nibbles[1];
     130:	9c 91       	ld	r25, X
     132:	8a 81       	ldd	r24, Y+2	; 0x02
     134:	89 2b       	or	r24, r25
     136:	8c 93       	st	X, r24
			LCDDR15		= LCDDR15 | nibbles[0];
     138:	f8 01       	movw	r30, r16
     13a:	90 81       	ld	r25, Z
     13c:	89 81       	ldd	r24, Y+1	; 0x01
     13e:	89 2b       	or	r24, r25
     140:	80 83       	st	Z, r24
     142:	73 c0       	rjmp	.+230    	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
		}
		
		if(pos == 1){	// for pos 1:
     144:	61 30       	cpi	r22, 0x01	; 1
     146:	71 05       	cpc	r23, r1
     148:	09 f0       	breq	.+2      	; 0x14c <writeChar+0xb2>
     14a:	41 c0       	rjmp	.+130    	; 0x1ce <writeChar+0x134>
			LCDDR0		= LCDDR0 & ~(0xf0); // clear all registers (same as 0x0)
     14c:	4c ee       	ldi	r20, 0xEC	; 236
     14e:	50 e0       	ldi	r21, 0x00	; 0
     150:	fa 01       	movw	r30, r20
     152:	80 81       	ld	r24, Z
     154:	8f 70       	andi	r24, 0x0F	; 15
     156:	80 83       	st	Z, r24
			LCDDR5		= LCDDR5 & ~(0xf0);
     158:	21 ef       	ldi	r18, 0xF1	; 241
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	f9 01       	movw	r30, r18
     15e:	80 81       	ld	r24, Z
     160:	8f 70       	andi	r24, 0x0F	; 15
     162:	80 83       	st	Z, r24
			LCDDR10		= LCDDR10 & ~(0xf0);
     164:	a6 ef       	ldi	r26, 0xF6	; 246
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	8c 91       	ld	r24, X
     16a:	8f 70       	andi	r24, 0x0F	; 15
     16c:	8c 93       	st	X, r24
			LCDDR15		= LCDDR15 & ~(0xf0);
     16e:	0f 2e       	mov	r0, r31
     170:	fb ef       	ldi	r31, 0xFB	; 251
     172:	ef 2e       	mov	r14, r31
     174:	f1 2c       	mov	r15, r1
     176:	f0 2d       	mov	r31, r0
     178:	f7 01       	movw	r30, r14
     17a:	80 81       	ld	r24, Z
     17c:	8f 70       	andi	r24, 0x0F	; 15
     17e:	80 83       	st	Z, r24
			
			LCDDR0		= LCDDR0 | nibbles[3]<<4; // or in all of the new data
     180:	fa 01       	movw	r30, r20
     182:	10 81       	ld	r17, Z
     184:	9c 81       	ldd	r25, Y+4	; 0x04
     186:	f0 e1       	ldi	r31, 0x10	; 16
     188:	9f 9f       	mul	r25, r31
     18a:	c0 01       	movw	r24, r0
     18c:	11 24       	eor	r1, r1
     18e:	81 2b       	or	r24, r17
     190:	fa 01       	movw	r30, r20
     192:	80 83       	st	Z, r24
			LCDDR5		= LCDDR5 | nibbles[2]<<4; // shifted in to place on pos 1 (done on all odd number segments)
     194:	f9 01       	movw	r30, r18
     196:	40 81       	ld	r20, Z
     198:	9b 81       	ldd	r25, Y+3	; 0x03
     19a:	f0 e1       	ldi	r31, 0x10	; 16
     19c:	9f 9f       	mul	r25, r31
     19e:	c0 01       	movw	r24, r0
     1a0:	11 24       	eor	r1, r1
     1a2:	84 2b       	or	r24, r20
     1a4:	f9 01       	movw	r30, r18
     1a6:	80 83       	st	Z, r24
			LCDDR10		= LCDDR10 | nibbles[1]<<4;
     1a8:	2c 91       	ld	r18, X
     1aa:	9a 81       	ldd	r25, Y+2	; 0x02
     1ac:	f0 e1       	ldi	r31, 0x10	; 16
     1ae:	9f 9f       	mul	r25, r31
     1b0:	c0 01       	movw	r24, r0
     1b2:	11 24       	eor	r1, r1
     1b4:	82 2b       	or	r24, r18
     1b6:	8c 93       	st	X, r24
			LCDDR15		= LCDDR15 | nibbles[0]<<4;
     1b8:	f7 01       	movw	r30, r14
     1ba:	20 81       	ld	r18, Z
     1bc:	99 81       	ldd	r25, Y+1	; 0x01
     1be:	f0 e1       	ldi	r31, 0x10	; 16
     1c0:	9f 9f       	mul	r25, r31
     1c2:	c0 01       	movw	r24, r0
     1c4:	11 24       	eor	r1, r1
     1c6:	82 2b       	or	r24, r18
     1c8:	f7 01       	movw	r30, r14
     1ca:	80 83       	st	Z, r24
     1cc:	6f c0       	rjmp	.+222    	; 0x2ac <__EEPROM_REGION_LENGTH__+0xac>
		}
		
		if(pos == 2){
     1ce:	62 30       	cpi	r22, 0x02	; 2
     1d0:	71 05       	cpc	r23, r1
     1d2:	59 f5       	brne	.+86     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
			LCDDR1		= LCDDR1 & ~(0xf); // clear all registers (~(0xf) same as 0x0)
     1d4:	2d ee       	ldi	r18, 0xED	; 237
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	f9 01       	movw	r30, r18
     1da:	80 81       	ld	r24, Z
     1dc:	80 7f       	andi	r24, 0xF0	; 240
     1de:	80 83       	st	Z, r24
			LCDDR6		= LCDDR6 & ~(0xf);
     1e0:	82 ef       	ldi	r24, 0xF2	; 242
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	fc 01       	movw	r30, r24
     1e6:	40 81       	ld	r20, Z
     1e8:	40 7f       	andi	r20, 0xF0	; 240
     1ea:	40 83       	st	Z, r20
			LCDDR11		= LCDDR11 & ~(0xf);
     1ec:	a7 ef       	ldi	r26, 0xF7	; 247
     1ee:	b0 e0       	ldi	r27, 0x00	; 0
     1f0:	4c 91       	ld	r20, X
     1f2:	40 7f       	andi	r20, 0xF0	; 240
     1f4:	4c 93       	st	X, r20
			LCDDR16		= LCDDR16 & ~(0xf);
     1f6:	0c ef       	ldi	r16, 0xFC	; 252
     1f8:	10 e0       	ldi	r17, 0x00	; 0
     1fa:	f8 01       	movw	r30, r16
     1fc:	40 81       	ld	r20, Z
     1fe:	40 7f       	andi	r20, 0xF0	; 240
     200:	40 83       	st	Z, r20
			
			LCDDR1		= LCDDR1 | nibbles[3]; // or in all of the new data
     202:	f9 01       	movw	r30, r18
     204:	50 81       	ld	r21, Z
     206:	4c 81       	ldd	r20, Y+4	; 0x04
     208:	45 2b       	or	r20, r21
     20a:	40 83       	st	Z, r20
			LCDDR6		= LCDDR6 | nibbles[2];
     20c:	fc 01       	movw	r30, r24
     20e:	30 81       	ld	r19, Z
     210:	2b 81       	ldd	r18, Y+3	; 0x03
     212:	23 2b       	or	r18, r19
     214:	20 83       	st	Z, r18
			LCDDR11		= LCDDR11 | nibbles[1];
     216:	9c 91       	ld	r25, X
     218:	8a 81       	ldd	r24, Y+2	; 0x02
     21a:	89 2b       	or	r24, r25
     21c:	8c 93       	st	X, r24
			LCDDR16		= LCDDR16 | nibbles[0];
     21e:	f8 01       	movw	r30, r16
     220:	90 81       	ld	r25, Z
     222:	89 81       	ldd	r24, Y+1	; 0x01
     224:	89 2b       	or	r24, r25
     226:	80 83       	st	Z, r24
     228:	6f c0       	rjmp	.+222    	; 0x308 <__EEPROM_REGION_LENGTH__+0x108>
		}
		
		if(pos == 3){
     22a:	63 30       	cpi	r22, 0x03	; 3
     22c:	71 05       	cpc	r23, r1
     22e:	f1 f5       	brne	.+124    	; 0x2ac <__EEPROM_REGION_LENGTH__+0xac>
			LCDDR1		= LCDDR1 & ~(0xf0); // clear all registers (same as 0x0)
     230:	4d ee       	ldi	r20, 0xED	; 237
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	fa 01       	movw	r30, r20
     236:	80 81       	ld	r24, Z
     238:	8f 70       	andi	r24, 0x0F	; 15
     23a:	80 83       	st	Z, r24
			LCDDR6		= LCDDR6 & ~(0xf0);
     23c:	22 ef       	ldi	r18, 0xF2	; 242
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	f9 01       	movw	r30, r18
     242:	80 81       	ld	r24, Z
     244:	8f 70       	andi	r24, 0x0F	; 15
     246:	80 83       	st	Z, r24
			LCDDR11		= LCDDR11 & ~(0xf0);
     248:	a7 ef       	ldi	r26, 0xF7	; 247
     24a:	b0 e0       	ldi	r27, 0x00	; 0
     24c:	8c 91       	ld	r24, X
     24e:	8f 70       	andi	r24, 0x0F	; 15
     250:	8c 93       	st	X, r24
			LCDDR16		= LCDDR16 & ~(0xf0);
     252:	0c ef       	ldi	r16, 0xFC	; 252
     254:	10 e0       	ldi	r17, 0x00	; 0
     256:	f8 01       	movw	r30, r16
     258:	80 81       	ld	r24, Z
     25a:	8f 70       	andi	r24, 0x0F	; 15
     25c:	80 83       	st	Z, r24
			
			LCDDR1		= LCDDR1 | nibbles[3]<<4; // or in all of the new data
     25e:	fa 01       	movw	r30, r20
     260:	60 81       	ld	r22, Z
     262:	9c 81       	ldd	r25, Y+4	; 0x04
     264:	f0 e1       	ldi	r31, 0x10	; 16
     266:	9f 9f       	mul	r25, r31
     268:	c0 01       	movw	r24, r0
     26a:	11 24       	eor	r1, r1
     26c:	86 2b       	or	r24, r22
     26e:	fa 01       	movw	r30, r20
     270:	80 83       	st	Z, r24
			LCDDR6		= LCDDR6 | nibbles[2]<<4;
     272:	f9 01       	movw	r30, r18
     274:	40 81       	ld	r20, Z
     276:	9b 81       	ldd	r25, Y+3	; 0x03
     278:	f0 e1       	ldi	r31, 0x10	; 16
     27a:	9f 9f       	mul	r25, r31
     27c:	c0 01       	movw	r24, r0
     27e:	11 24       	eor	r1, r1
     280:	84 2b       	or	r24, r20
     282:	f9 01       	movw	r30, r18
     284:	80 83       	st	Z, r24
			LCDDR11		= LCDDR11 | nibbles[1]<<4;
     286:	2c 91       	ld	r18, X
     288:	9a 81       	ldd	r25, Y+2	; 0x02
     28a:	f0 e1       	ldi	r31, 0x10	; 16
     28c:	9f 9f       	mul	r25, r31
     28e:	c0 01       	movw	r24, r0
     290:	11 24       	eor	r1, r1
     292:	82 2b       	or	r24, r18
     294:	8c 93       	st	X, r24
			LCDDR16		= LCDDR16 | nibbles[0]<<4;
     296:	f8 01       	movw	r30, r16
     298:	20 81       	ld	r18, Z
     29a:	99 81       	ldd	r25, Y+1	; 0x01
     29c:	f0 e1       	ldi	r31, 0x10	; 16
     29e:	9f 9f       	mul	r25, r31
     2a0:	c0 01       	movw	r24, r0
     2a2:	11 24       	eor	r1, r1
     2a4:	82 2b       	or	r24, r18
     2a6:	f8 01       	movw	r30, r16
     2a8:	80 83       	st	Z, r24
     2aa:	6e c0       	rjmp	.+220    	; 0x388 <__EEPROM_REGION_LENGTH__+0x188>
		}
		
		if(pos == 4){
     2ac:	64 30       	cpi	r22, 0x04	; 4
     2ae:	71 05       	cpc	r23, r1
     2b0:	59 f5       	brne	.+86     	; 0x308 <__EEPROM_REGION_LENGTH__+0x108>
			LCDDR2		= LCDDR2 & ~(0xf); // clear all registers (~(0xf) same as 0x0)
     2b2:	2e ee       	ldi	r18, 0xEE	; 238
     2b4:	30 e0       	ldi	r19, 0x00	; 0
     2b6:	f9 01       	movw	r30, r18
     2b8:	80 81       	ld	r24, Z
     2ba:	80 7f       	andi	r24, 0xF0	; 240
     2bc:	80 83       	st	Z, r24
			LCDDR7		= LCDDR7 & ~(0xf);
     2be:	83 ef       	ldi	r24, 0xF3	; 243
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	fc 01       	movw	r30, r24
     2c4:	40 81       	ld	r20, Z
     2c6:	40 7f       	andi	r20, 0xF0	; 240
     2c8:	40 83       	st	Z, r20
			LCDDR12		= LCDDR12 & ~(0xf);
     2ca:	a8 ef       	ldi	r26, 0xF8	; 248
     2cc:	b0 e0       	ldi	r27, 0x00	; 0
     2ce:	4c 91       	ld	r20, X
     2d0:	40 7f       	andi	r20, 0xF0	; 240
     2d2:	4c 93       	st	X, r20
			LCDDR17		= LCDDR17 & ~(0xf);
     2d4:	6d ef       	ldi	r22, 0xFD	; 253
     2d6:	70 e0       	ldi	r23, 0x00	; 0
     2d8:	fb 01       	movw	r30, r22
     2da:	40 81       	ld	r20, Z
     2dc:	40 7f       	andi	r20, 0xF0	; 240
     2de:	40 83       	st	Z, r20
			
			LCDDR2		= LCDDR2 | nibbles[3]; // or in all of the new data
     2e0:	f9 01       	movw	r30, r18
     2e2:	50 81       	ld	r21, Z
     2e4:	4c 81       	ldd	r20, Y+4	; 0x04
     2e6:	45 2b       	or	r20, r21
     2e8:	40 83       	st	Z, r20
			LCDDR7		= LCDDR7 | nibbles[2];
     2ea:	fc 01       	movw	r30, r24
     2ec:	30 81       	ld	r19, Z
     2ee:	2b 81       	ldd	r18, Y+3	; 0x03
     2f0:	23 2b       	or	r18, r19
     2f2:	20 83       	st	Z, r18
			LCDDR12		= LCDDR12 | nibbles[1];
     2f4:	9c 91       	ld	r25, X
     2f6:	8a 81       	ldd	r24, Y+2	; 0x02
     2f8:	89 2b       	or	r24, r25
     2fa:	8c 93       	st	X, r24
			LCDDR17		= LCDDR17 | nibbles[0];
     2fc:	fb 01       	movw	r30, r22
     2fe:	90 81       	ld	r25, Z
     300:	89 81       	ldd	r24, Y+1	; 0x01
     302:	89 2b       	or	r24, r25
     304:	80 83       	st	Z, r24
     306:	40 c0       	rjmp	.+128    	; 0x388 <__EEPROM_REGION_LENGTH__+0x188>
		}
		
		if(pos == 5){
     308:	65 30       	cpi	r22, 0x05	; 5
     30a:	71 05       	cpc	r23, r1
     30c:	e9 f5       	brne	.+122    	; 0x388 <__EEPROM_REGION_LENGTH__+0x188>
			LCDDR2		= LCDDR2 & ~(0xf0); // clear all registers (same as 0x0)
     30e:	4e ee       	ldi	r20, 0xEE	; 238
     310:	50 e0       	ldi	r21, 0x00	; 0
     312:	fa 01       	movw	r30, r20
     314:	80 81       	ld	r24, Z
     316:	8f 70       	andi	r24, 0x0F	; 15
     318:	80 83       	st	Z, r24
			LCDDR7		= LCDDR7 & ~(0xf0);
     31a:	23 ef       	ldi	r18, 0xF3	; 243
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	f9 01       	movw	r30, r18
     320:	80 81       	ld	r24, Z
     322:	8f 70       	andi	r24, 0x0F	; 15
     324:	80 83       	st	Z, r24
			LCDDR12		= LCDDR12 & ~(0xf0);
     326:	a8 ef       	ldi	r26, 0xF8	; 248
     328:	b0 e0       	ldi	r27, 0x00	; 0
     32a:	8c 91       	ld	r24, X
     32c:	8f 70       	andi	r24, 0x0F	; 15
     32e:	8c 93       	st	X, r24
			LCDDR17		= LCDDR17 & ~(0xf0);
     330:	0d ef       	ldi	r16, 0xFD	; 253
     332:	10 e0       	ldi	r17, 0x00	; 0
     334:	f8 01       	movw	r30, r16
     336:	80 81       	ld	r24, Z
     338:	8f 70       	andi	r24, 0x0F	; 15
     33a:	80 83       	st	Z, r24
			
			LCDDR2		= LCDDR2 | nibbles[3]<<4; // or in all of the new data
     33c:	fa 01       	movw	r30, r20
     33e:	60 81       	ld	r22, Z
     340:	9c 81       	ldd	r25, Y+4	; 0x04
     342:	f0 e1       	ldi	r31, 0x10	; 16
     344:	9f 9f       	mul	r25, r31
     346:	c0 01       	movw	r24, r0
     348:	11 24       	eor	r1, r1
     34a:	86 2b       	or	r24, r22
     34c:	fa 01       	movw	r30, r20
     34e:	80 83       	st	Z, r24
			LCDDR7		= LCDDR7 | nibbles[2]<<4;
     350:	f9 01       	movw	r30, r18
     352:	40 81       	ld	r20, Z
     354:	9b 81       	ldd	r25, Y+3	; 0x03
     356:	f0 e1       	ldi	r31, 0x10	; 16
     358:	9f 9f       	mul	r25, r31
     35a:	c0 01       	movw	r24, r0
     35c:	11 24       	eor	r1, r1
     35e:	84 2b       	or	r24, r20
     360:	f9 01       	movw	r30, r18
     362:	80 83       	st	Z, r24
			LCDDR12		= LCDDR12 | nibbles[1]<<4;
     364:	2c 91       	ld	r18, X
     366:	9a 81       	ldd	r25, Y+2	; 0x02
     368:	f0 e1       	ldi	r31, 0x10	; 16
     36a:	9f 9f       	mul	r25, r31
     36c:	c0 01       	movw	r24, r0
     36e:	11 24       	eor	r1, r1
     370:	82 2b       	or	r24, r18
     372:	8c 93       	st	X, r24
			LCDDR17		= LCDDR17 | nibbles[0]<<4;
     374:	f8 01       	movw	r30, r16
     376:	20 81       	ld	r18, Z
     378:	99 81       	ldd	r25, Y+1	; 0x01
     37a:	f0 e1       	ldi	r31, 0x10	; 16
     37c:	9f 9f       	mul	r25, r31
     37e:	c0 01       	movw	r24, r0
     380:	11 24       	eor	r1, r1
     382:	82 2b       	or	r24, r18
     384:	f8 01       	movw	r30, r16
     386:	80 83       	st	Z, r24
		}
		
	}
	
}
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	0f 90       	pop	r0
     390:	df 91       	pop	r29
     392:	cf 91       	pop	r28
     394:	1f 91       	pop	r17
     396:	0f 91       	pop	r16
     398:	ff 90       	pop	r15
     39a:	ef 90       	pop	r14
     39c:	08 95       	ret

0000039e <printAt>:


void printAt(int pos, int num) {	// Prints the current set frequency at the correct position from a given pulse generator
     39e:	ef 92       	push	r14
     3a0:	ff 92       	push	r15
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	ec 01       	movw	r28, r24
     3ac:	7b 01       	movw	r14, r22
	int posNext = pos;
	writeChar( (num % 100) / 10 + '0', pos);
     3ae:	cb 01       	movw	r24, r22
     3b0:	64 e6       	ldi	r22, 0x64	; 100
     3b2:	70 e0       	ldi	r23, 0x00	; 0
     3b4:	0e 94 1a 10 	call	0x2034	; 0x2034 <__divmodhi4>
     3b8:	0a e0       	ldi	r16, 0x0A	; 10
     3ba:	10 e0       	ldi	r17, 0x00	; 0
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 1a 10 	call	0x2034	; 0x2034 <__divmodhi4>
     3c2:	86 2f       	mov	r24, r22
     3c4:	be 01       	movw	r22, r28
     3c6:	80 5d       	subi	r24, 0xD0	; 208
     3c8:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
	posNext++;
	writeChar( num % 10 + '0', posNext);
     3cc:	21 96       	adiw	r28, 0x01	; 1
     3ce:	c7 01       	movw	r24, r14
     3d0:	b8 01       	movw	r22, r16
     3d2:	0e 94 1a 10 	call	0x2034	; 0x2034 <__divmodhi4>
     3d6:	be 01       	movw	r22, r28
     3d8:	80 5d       	subi	r24, 0xD0	; 208
     3da:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	1f 91       	pop	r17
     3e4:	0f 91       	pop	r16
     3e6:	ff 90       	pop	r15
     3e8:	ef 90       	pop	r14
     3ea:	08 95       	ret

000003ec <boostClk>:
#include <stdio.h>
#include <stdbool.h>
#include <avr/interrupt.h>

void boostClk(void){
	CLKPR = 0x80;
     3ec:	e1 e6       	ldi	r30, 0x61	; 97
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	80 e8       	ldi	r24, 0x80	; 128
     3f2:	80 83       	st	Z, r24
	CLKPR = 0x00;
     3f4:	10 82       	st	Z, r1
     3f6:	08 95       	ret

000003f8 <initPinsNsuch>:
}

void initPinsNsuch(void){
	// PortB (DOWN,UP,CENTER) Enabled
	 PORTB = (1<<PB7) | (1<<PB6) | (1<<PB4);
     3f8:	20 ed       	ldi	r18, 0xD0	; 208
     3fa:	25 b9       	out	0x05, r18	; 5
	 
	 // PortE (RIGHT,LEFT) Enabled
	 PORTE = (1<<PE3) | (1<<PE2);
     3fc:	9c e0       	ldi	r25, 0x0C	; 12
     3fe:	9e b9       	out	0x0e, r25	; 14
	 
	 // External Interrupt Mask Register
	 EIMSK = (1<<PCIE1) | (1<<PCIE0);
     400:	80 ec       	ldi	r24, 0xC0	; 192
     402:	8d bb       	out	0x1d, r24	; 29
	 
	 // Pin Change Mask Register for DOWN,UP,CENTER
	 PCMSK1 = (1<<PCINT15)| (1<<PCINT14) | (1<<PCINT12);
     404:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>

	 // Pin Change Mask Register for RIGHT and LEFT
	 PCMSK0 = (1<<PCINT3) | (1<<PCINT2);
     408:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	 
	 DDRE = (1<<DDE6) | (1<<DDE4); // Turn on ports (Credits to my boy Spiffler #1 Limpus technician)
     40c:	90 e5       	ldi	r25, 0x50	; 80
     40e:	9d b9       	out	0x0d, r25	; 13
	 
	 // External async, Bias 1/3, Duty cycle 1/4, Set port mask for 25 segments
	 LCDCRB = (1<<LCDCS) | (0<<LCD2B) | (1<<LCDMUX0) | (1<<LCDMUX1) | (1<<LCDPM0) | (1<<LCDPM1) | (1<<LCDPM2);
     410:	97 eb       	ldi	r25, 0xB7	; 183
     412:	90 93 e5 00 	sts	0x00E5, r25	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>

	 // Prescaler = 16, clock divider = 8
	 LCDFRR = (1<<LCDCD0) | (1<<LCDCD1) | (1<<LCDCD2);
     416:	97 e0       	ldi	r25, 0x07	; 7
     418:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>

	 // Set maximum voltage 3.35V
	 LCDCCR = (1<<LCDCC0) | (1<<LCDCC1) | (1<<LCDCC2) | (1<<LCDCC3);
     41c:	9f e0       	ldi	r25, 0x0F	; 15
     41e:	90 93 e7 00 	sts	0x00E7, r25	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>

	 // LCD enabled, Low power waveform
	 LCDCRA = (1<<LCDEN) | (1<<LCDAB);
     422:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     426:	08 95       	ret

00000428 <main>:
}

int main(void)
{
    /* Replace with your application code */
	boostClk();
     428:	0e 94 f6 01 	call	0x3ec	; 0x3ec <boostClk>
	initPinsNsuch();
     42c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <initPinsNsuch>
	static Pulse pulse = initPulse();
	static PulseGenerator leftPulse = initPulseGenerator(0, 0, 4, 0, false, &pulse);	// Left pulse generator
    static PulseGenerator rightPulse = initPulseGenerator(0, 0, 6, 4, false, &pulse);	// Right pulse generator
	static PortManager portMan = initportManager(&leftPulse, &rightPulse, 0, 0, 0);	// The portmanager
	
	INSTALL(&portMan, &joystickMove, IRQ_PCINT0); //interrupt for left and right
     430:	41 e0       	ldi	r20, 0x01	; 1
     432:	62 ea       	ldi	r22, 0xA2	; 162
     434:	72 e0       	ldi	r23, 0x02	; 2
     436:	86 e3       	ldi	r24, 0x36	; 54
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <install>
	INSTALL(&portMan, &joystickMove, IRQ_PCINT1); //interrupt for up, down and center
     43e:	42 e0       	ldi	r20, 0x02	; 2
     440:	62 ea       	ldi	r22, 0xA2	; 162
     442:	72 e0       	ldi	r23, 0x02	; 2
     444:	86 e3       	ldi	r24, 0x36	; 54
     446:	91 e0       	ldi	r25, 0x01	; 1
     448:	0e 94 e4 0f 	call	0x1fc8	; 0x1fc8 <install>
	
	return TINYTIMBER(&portMan, &start, 0);	// Start tinytimber, we just init the screen from the start method
     44c:	40 e0       	ldi	r20, 0x00	; 0
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	67 e6       	ldi	r22, 0x67	; 103
     452:	73 e0       	ldi	r23, 0x03	; 3
     454:	86 e3       	ldi	r24, 0x36	; 54
     456:	91 e0       	ldi	r25, 0x01	; 1
     458:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <tinytimber>
	
}
     45c:	08 95       	ret

0000045e <selectPos>:
}


PulseGenerator* selectPos(PortManager* port){	// Selects wanted pulse generator object
	PulseGenerator *currPulse;
	if (port->targetPulsePos == 0){
     45e:	fc 01       	movw	r30, r24
     460:	20 85       	ldd	r18, Z+8	; 0x08
     462:	31 85       	ldd	r19, Z+9	; 0x09
     464:	23 2b       	or	r18, r19
     466:	19 f4       	brne	.+6      	; 0x46e <selectPos+0x10>
		currPulse = port->leftPulse;
     468:	84 81       	ldd	r24, Z+4	; 0x04
     46a:	95 81       	ldd	r25, Z+5	; 0x05
     46c:	08 95       	ret
	}
	else{
		currPulse = port->rightPulse;
     46e:	fc 01       	movw	r30, r24
     470:	86 81       	ldd	r24, Z+6	; 0x06
     472:	97 81       	ldd	r25, Z+7	; 0x07
	}
	return currPulse;
}
     474:	08 95       	ret

00000476 <holdPin>:


void holdPin(PortManager* port) {
     476:	cf 92       	push	r12
     478:	df 92       	push	r13
     47a:	ef 92       	push	r14
     47c:	ff 92       	push	r15
     47e:	0f 93       	push	r16
     480:	1f 93       	push	r17
     482:	cf 93       	push	r28
     484:	df 93       	push	r29
     486:	ec 01       	movw	r28, r24
	PulseGenerator* currPulse = selectPos(port);
     488:	0e 94 2f 02 	call	0x45e	; 0x45e <selectPos>
	
	if((!((PINB >> 7) & 1)) && port->isPressed){ // Down 
     48c:	1f 99       	sbic	0x03, 7	; 3
     48e:	26 c0       	rjmp	.+76     	; 0x4dc <holdPin+0x66>
     490:	2a 85       	ldd	r18, Y+10	; 0x0a
     492:	22 23       	and	r18, r18
     494:	09 f4       	brne	.+2      	; 0x498 <holdPin+0x22>
     496:	4b c0       	rjmp	.+150    	; 0x52e <__stack+0x2f>
		ASYNC(currPulse, &decFreq, 0);
     498:	c1 2c       	mov	r12, r1
     49a:	d1 2c       	mov	r13, r1
     49c:	0f 2e       	mov	r0, r31
     49e:	f4 ea       	ldi	r31, 0xA4	; 164
     4a0:	ef 2e       	mov	r14, r31
     4a2:	f3 e0       	ldi	r31, 0x03	; 3
     4a4:	ff 2e       	mov	r15, r31
     4a6:	f0 2d       	mov	r31, r0
     4a8:	8c 01       	movw	r16, r24
     4aa:	20 e0       	ldi	r18, 0x00	; 0
     4ac:	30 e0       	ldi	r19, 0x00	; 0
     4ae:	a9 01       	movw	r20, r18
     4b0:	60 e0       	ldi	r22, 0x00	; 0
     4b2:	70 e0       	ldi	r23, 0x00	; 0
     4b4:	cb 01       	movw	r24, r22
     4b6:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		AFTER(CONT_REPEAT_DELAY_HOLD, port, holdPin, 0);
     4ba:	0f 2e       	mov	r0, r31
     4bc:	fb e3       	ldi	r31, 0x3B	; 59
     4be:	ef 2e       	mov	r14, r31
     4c0:	f2 e0       	ldi	r31, 0x02	; 2
     4c2:	ff 2e       	mov	r15, r31
     4c4:	f0 2d       	mov	r31, r0
     4c6:	8e 01       	movw	r16, r28
     4c8:	20 e0       	ldi	r18, 0x00	; 0
     4ca:	30 e0       	ldi	r19, 0x00	; 0
     4cc:	a9 01       	movw	r20, r18
     4ce:	6f e4       	ldi	r22, 0x4F	; 79
     4d0:	72 e1       	ldi	r23, 0x12	; 18
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
     4da:	2b c0       	rjmp	.+86     	; 0x532 <__stack+0x33>
	}
	else if((!((PINB >> 6) & 1)) && port->isPressed) { // Up
     4dc:	1e 99       	sbic	0x03, 6	; 3
     4de:	25 c0       	rjmp	.+74     	; 0x52a <__stack+0x2b>
     4e0:	2a 85       	ldd	r18, Y+10	; 0x0a
     4e2:	22 23       	and	r18, r18
     4e4:	11 f1       	breq	.+68     	; 0x52a <__stack+0x2b>
		ASYNC(currPulse, &incFreq, 0);
     4e6:	c1 2c       	mov	r12, r1
     4e8:	d1 2c       	mov	r13, r1
     4ea:	0f 2e       	mov	r0, r31
     4ec:	f5 e9       	ldi	r31, 0x95	; 149
     4ee:	ef 2e       	mov	r14, r31
     4f0:	f3 e0       	ldi	r31, 0x03	; 3
     4f2:	ff 2e       	mov	r15, r31
     4f4:	f0 2d       	mov	r31, r0
     4f6:	8c 01       	movw	r16, r24
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	a9 01       	movw	r20, r18
     4fe:	60 e0       	ldi	r22, 0x00	; 0
     500:	70 e0       	ldi	r23, 0x00	; 0
     502:	cb 01       	movw	r24, r22
     504:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		AFTER(CONT_REPEAT_DELAY_HOLD, port, holdPin, 0);
     508:	0f 2e       	mov	r0, r31
     50a:	fb e3       	ldi	r31, 0x3B	; 59
     50c:	ef 2e       	mov	r14, r31
     50e:	f2 e0       	ldi	r31, 0x02	; 2
     510:	ff 2e       	mov	r15, r31
     512:	f0 2d       	mov	r31, r0
     514:	8e 01       	movw	r16, r28
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	a9 01       	movw	r20, r18
     51c:	6f e4       	ldi	r22, 0x4F	; 79
     51e:	72 e1       	ldi	r23, 0x12	; 18
     520:	80 e0       	ldi	r24, 0x00	; 0
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
     528:	04 c0       	rjmp	.+8      	; 0x532 <__stack+0x33>
	} else{
		port->isPressed = 0;
     52a:	1a 86       	std	Y+10, r1	; 0x0a
	}

}
     52c:	02 c0       	rjmp	.+4      	; 0x532 <__stack+0x33>
	
	if((!((PINB >> 7) & 1)) && port->isPressed){ // Down 
		ASYNC(currPulse, &decFreq, 0);
		AFTER(CONT_REPEAT_DELAY_HOLD, port, holdPin, 0);
	}
	else if((!((PINB >> 6) & 1)) && port->isPressed) { // Up
     52e:	83 b1       	in	r24, 0x03	; 3
     530:	fc cf       	rjmp	.-8      	; 0x52a <__stack+0x2b>
		AFTER(CONT_REPEAT_DELAY_HOLD, port, holdPin, 0);
	} else{
		port->isPressed = 0;
	}

}
     532:	df 91       	pop	r29
     534:	cf 91       	pop	r28
     536:	1f 91       	pop	r17
     538:	0f 91       	pop	r16
     53a:	ff 90       	pop	r15
     53c:	ef 90       	pop	r14
     53e:	df 90       	pop	r13
     540:	cf 90       	pop	r12
     542:	08 95       	ret

00000544 <joystickMove>:
#include <stdio.h>
#include <stdbool.h>
#include <avr/interrupt.h>


void joystickMove(PortManager *port){	// Joystick interrupt ends up here, each case is for a movement of the joystick
     544:	af 92       	push	r10
     546:	bf 92       	push	r11
     548:	cf 92       	push	r12
     54a:	df 92       	push	r13
     54c:	ef 92       	push	r14
     54e:	ff 92       	push	r15
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	ec 01       	movw	r28, r24
	PulseGenerator *currPulse = selectPos(port);
     55a:	0e 94 2f 02 	call	0x45e	; 0x45e <selectPos>
     55e:	5c 01       	movw	r10, r24
	if(port->isPressed){
     560:	8a 85       	ldd	r24, Y+10	; 0x0a
     562:	81 11       	cpse	r24, r1
     564:	a9 c0       	rjmp	.+338    	; 0x6b8 <joystickMove+0x174>
		return;
	}
	
	if (!((PINB >> 7) & 1)){    // Down
     566:	1f 99       	sbic	0x03, 7	; 3
     568:	26 c0       	rjmp	.+76     	; 0x5b6 <joystickMove+0x72>
		ASYNC(currPulse, &decFreq, 0);
     56a:	c1 2c       	mov	r12, r1
     56c:	d1 2c       	mov	r13, r1
     56e:	0f 2e       	mov	r0, r31
     570:	f4 ea       	ldi	r31, 0xA4	; 164
     572:	ef 2e       	mov	r14, r31
     574:	f3 e0       	ldi	r31, 0x03	; 3
     576:	ff 2e       	mov	r15, r31
     578:	f0 2d       	mov	r31, r0
     57a:	85 01       	movw	r16, r10
     57c:	20 e0       	ldi	r18, 0x00	; 0
     57e:	30 e0       	ldi	r19, 0x00	; 0
     580:	a9 01       	movw	r20, r18
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	70 e0       	ldi	r23, 0x00	; 0
     586:	cb 01       	movw	r24, r22
     588:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		if (!port->isPressed){
     58c:	8a 85       	ldd	r24, Y+10	; 0x0a
     58e:	81 11       	cpse	r24, r1
     590:	12 c0       	rjmp	.+36     	; 0x5b6 <joystickMove+0x72>
			port->isPressed = 1;
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	8a 87       	std	Y+10, r24	; 0x0a
			AFTER(CONT_REPEAT_DELAY_STICK, port, holdPin, 0);
     596:	0f 2e       	mov	r0, r31
     598:	fb e3       	ldi	r31, 0x3B	; 59
     59a:	ef 2e       	mov	r14, r31
     59c:	f2 e0       	ldi	r31, 0x02	; 2
     59e:	ff 2e       	mov	r15, r31
     5a0:	f0 2d       	mov	r31, r0
     5a2:	8e 01       	movw	r16, r28
     5a4:	20 e0       	ldi	r18, 0x00	; 0
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	a9 01       	movw	r20, r18
     5aa:	64 ed       	ldi	r22, 0xD4	; 212
     5ac:	70 e3       	ldi	r23, 0x30	; 48
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		}
	}

	if (!((PINB >> 6) & 1)){    // Up
     5b6:	1e 99       	sbic	0x03, 6	; 3
     5b8:	26 c0       	rjmp	.+76     	; 0x606 <joystickMove+0xc2>
		ASYNC(currPulse, &incFreq, 0);
     5ba:	c1 2c       	mov	r12, r1
     5bc:	d1 2c       	mov	r13, r1
     5be:	0f 2e       	mov	r0, r31
     5c0:	f5 e9       	ldi	r31, 0x95	; 149
     5c2:	ef 2e       	mov	r14, r31
     5c4:	f3 e0       	ldi	r31, 0x03	; 3
     5c6:	ff 2e       	mov	r15, r31
     5c8:	f0 2d       	mov	r31, r0
     5ca:	85 01       	movw	r16, r10
     5cc:	20 e0       	ldi	r18, 0x00	; 0
     5ce:	30 e0       	ldi	r19, 0x00	; 0
     5d0:	a9 01       	movw	r20, r18
     5d2:	60 e0       	ldi	r22, 0x00	; 0
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	cb 01       	movw	r24, r22
     5d8:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		if (!port->isPressed){
     5dc:	8a 85       	ldd	r24, Y+10	; 0x0a
     5de:	81 11       	cpse	r24, r1
     5e0:	12 c0       	rjmp	.+36     	; 0x606 <joystickMove+0xc2>
			port->isPressed = 1;
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	8a 87       	std	Y+10, r24	; 0x0a
			AFTER(CONT_REPEAT_DELAY_STICK, port, holdPin, 0);
     5e6:	0f 2e       	mov	r0, r31
     5e8:	fb e3       	ldi	r31, 0x3B	; 59
     5ea:	ef 2e       	mov	r14, r31
     5ec:	f2 e0       	ldi	r31, 0x02	; 2
     5ee:	ff 2e       	mov	r15, r31
     5f0:	f0 2d       	mov	r31, r0
     5f2:	8e 01       	movw	r16, r28
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	30 e0       	ldi	r19, 0x00	; 0
     5f8:	a9 01       	movw	r20, r18
     5fa:	64 ed       	ldi	r22, 0xD4	; 212
     5fc:	70 e3       	ldi	r23, 0x30	; 48
     5fe:	80 e0       	ldi	r24, 0x00	; 0
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		}
	}

	if (!((PINE >> 2) & 1)){    // Left
     606:	62 99       	sbic	0x0c, 2	; 12
     608:	13 c0       	rjmp	.+38     	; 0x630 <joystickMove+0xec>
		port->targetPulsePos = 0;
     60a:	19 86       	std	Y+9, r1	; 0x09
     60c:	18 86       	std	Y+8, r1	; 0x08
		ASYNC(currPulse, selectPos, 0);
     60e:	c1 2c       	mov	r12, r1
     610:	d1 2c       	mov	r13, r1
     612:	0f 2e       	mov	r0, r31
     614:	ff e2       	ldi	r31, 0x2F	; 47
     616:	ef 2e       	mov	r14, r31
     618:	f2 e0       	ldi	r31, 0x02	; 2
     61a:	ff 2e       	mov	r15, r31
     61c:	f0 2d       	mov	r31, r0
     61e:	85 01       	movw	r16, r10
     620:	20 e0       	ldi	r18, 0x00	; 0
     622:	30 e0       	ldi	r19, 0x00	; 0
     624:	a9 01       	movw	r20, r18
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	cb 01       	movw	r24, r22
     62c:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
	}
	if (!((PINE >> 3) & 1)){    // Right
     630:	63 99       	sbic	0x0c, 3	; 12
     632:	15 c0       	rjmp	.+42     	; 0x65e <joystickMove+0x11a>
		port->targetPulsePos = 4;
     634:	84 e0       	ldi	r24, 0x04	; 4
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	99 87       	std	Y+9, r25	; 0x09
     63a:	88 87       	std	Y+8, r24	; 0x08
		ASYNC(currPulse, selectPos, 0);
     63c:	c1 2c       	mov	r12, r1
     63e:	d1 2c       	mov	r13, r1
     640:	0f 2e       	mov	r0, r31
     642:	ff e2       	ldi	r31, 0x2F	; 47
     644:	ef 2e       	mov	r14, r31
     646:	f2 e0       	ldi	r31, 0x02	; 2
     648:	ff 2e       	mov	r15, r31
     64a:	f0 2d       	mov	r31, r0
     64c:	85 01       	movw	r16, r10
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	a9 01       	movw	r20, r18
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	cb 01       	movw	r24, r22
     65a:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
	}
	
	if (!((PINB >> 4) & 1)){    // In
     65e:	1c 99       	sbic	0x03, 4	; 3
     660:	2b c0       	rjmp	.+86     	; 0x6b8 <joystickMove+0x174>
		if ((currPulse->currentFreq == 0) && (currPulse->saveBool)){
     662:	f5 01       	movw	r30, r10
     664:	84 81       	ldd	r24, Z+4	; 0x04
     666:	95 81       	ldd	r25, Z+5	; 0x05
     668:	89 2b       	or	r24, r25
     66a:	a9 f4       	brne	.+42     	; 0x696 <joystickMove+0x152>
     66c:	84 85       	ldd	r24, Z+12	; 0x0c
     66e:	88 23       	and	r24, r24
     670:	91 f0       	breq	.+36     	; 0x696 <joystickMove+0x152>
			ASYNC(currPulse, &loadFreq, 0);
     672:	c1 2c       	mov	r12, r1
     674:	d1 2c       	mov	r13, r1
     676:	0f 2e       	mov	r0, r31
     678:	f3 ec       	ldi	r31, 0xC3	; 195
     67a:	ef 2e       	mov	r14, r31
     67c:	f3 e0       	ldi	r31, 0x03	; 3
     67e:	ff 2e       	mov	r15, r31
     680:	f0 2d       	mov	r31, r0
     682:	85 01       	movw	r16, r10
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	a9 01       	movw	r20, r18
     68a:	60 e0       	ldi	r22, 0x00	; 0
     68c:	70 e0       	ldi	r23, 0x00	; 0
     68e:	cb 01       	movw	r24, r22
     690:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
     694:	11 c0       	rjmp	.+34     	; 0x6b8 <joystickMove+0x174>
			} else {
			ASYNC(currPulse, &saveFreq, 0);
     696:	c1 2c       	mov	r12, r1
     698:	d1 2c       	mov	r13, r1
     69a:	0f 2e       	mov	r0, r31
     69c:	f3 eb       	ldi	r31, 0xB3	; 179
     69e:	ef 2e       	mov	r14, r31
     6a0:	f3 e0       	ldi	r31, 0x03	; 3
     6a2:	ff 2e       	mov	r15, r31
     6a4:	f0 2d       	mov	r31, r0
     6a6:	85 01       	movw	r16, r10
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	a9 01       	movw	r20, r18
     6ae:	60 e0       	ldi	r22, 0x00	; 0
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	cb 01       	movw	r24, r22
     6b4:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
		}
	}
	return;
}
     6b8:	df 91       	pop	r29
     6ba:	cf 91       	pop	r28
     6bc:	1f 91       	pop	r17
     6be:	0f 91       	pop	r16
     6c0:	ff 90       	pop	r15
     6c2:	ef 90       	pop	r14
     6c4:	df 90       	pop	r13
     6c6:	cf 90       	pop	r12
     6c8:	bf 90       	pop	r11
     6ca:	af 90       	pop	r10
     6cc:	08 95       	ret

000006ce <start>:
	}

}


void start(PortManager *portman, int arg){	// Prints initial values of pulse generators on the screen
     6ce:	cf 92       	push	r12
     6d0:	df 92       	push	r13
     6d2:	ef 92       	push	r14
     6d4:	ff 92       	push	r15
     6d6:	0f 93       	push	r16
     6d8:	1f 93       	push	r17
     6da:	cf 93       	push	r28
     6dc:	df 93       	push	r29
     6de:	ec 01       	movw	r28, r24
	ASYNC(portman->leftPulse, &startDisplay, 0);
     6e0:	0c 81       	ldd	r16, Y+4	; 0x04
     6e2:	1d 81       	ldd	r17, Y+5	; 0x05
     6e4:	c1 2c       	mov	r12, r1
     6e6:	d1 2c       	mov	r13, r1
     6e8:	0f 2e       	mov	r0, r31
     6ea:	fe ec       	ldi	r31, 0xCE	; 206
     6ec:	ef 2e       	mov	r14, r31
     6ee:	f3 e0       	ldi	r31, 0x03	; 3
     6f0:	ff 2e       	mov	r15, r31
     6f2:	f0 2d       	mov	r31, r0
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	a9 01       	movw	r20, r18
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	70 e0       	ldi	r23, 0x00	; 0
     6fe:	cb 01       	movw	r24, r22
     700:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
	ASYNC(portman->rightPulse, &startDisplay, 0);
     704:	0e 81       	ldd	r16, Y+6	; 0x06
     706:	1f 81       	ldd	r17, Y+7	; 0x07
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	a9 01       	movw	r20, r18
     70e:	60 e0       	ldi	r22, 0x00	; 0
     710:	70 e0       	ldi	r23, 0x00	; 0
     712:	cb 01       	movw	r24, r22
     714:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
     718:	df 91       	pop	r29
     71a:	cf 91       	pop	r28
     71c:	1f 91       	pop	r17
     71e:	0f 91       	pop	r16
     720:	ff 90       	pop	r15
     722:	ef 90       	pop	r14
     724:	df 90       	pop	r13
     726:	cf 90       	pop	r12
     728:	08 95       	ret

0000072a <incFreq>:
#include <stdbool.h>
#include <avr/interrupt.h>


void incFreq(PulseGenerator* self){	// Increases frequency
	if(self->currentFreq < 99){
     72a:	fc 01       	movw	r30, r24
     72c:	64 81       	ldd	r22, Z+4	; 0x04
     72e:	75 81       	ldd	r23, Z+5	; 0x05
     730:	63 36       	cpi	r22, 0x63	; 99
     732:	71 05       	cpc	r23, r1
     734:	44 f4       	brge	.+16     	; 0x746 <incFreq+0x1c>
		self->currentFreq += 1;
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	75 83       	std	Z+5, r23	; 0x05
     73c:	64 83       	std	Z+4, r22	; 0x04
		printAt(self->pos, self->currentFreq);
     73e:	82 85       	ldd	r24, Z+10	; 0x0a
     740:	93 85       	ldd	r25, Z+11	; 0x0b
     742:	0e 94 cf 01 	call	0x39e	; 0x39e <printAt>
     746:	08 95       	ret

00000748 <decFreq>:
	}
}


void decFreq(PulseGenerator* self){	// Decreases frequency
	if(self->currentFreq > 0){
     748:	fc 01       	movw	r30, r24
     74a:	64 81       	ldd	r22, Z+4	; 0x04
     74c:	75 81       	ldd	r23, Z+5	; 0x05
     74e:	16 16       	cp	r1, r22
     750:	17 06       	cpc	r1, r23
     752:	44 f4       	brge	.+16     	; 0x764 <decFreq+0x1c>
		self->currentFreq -= 1;
     754:	61 50       	subi	r22, 0x01	; 1
     756:	71 09       	sbc	r23, r1
     758:	75 83       	std	Z+5, r23	; 0x05
     75a:	64 83       	std	Z+4, r22	; 0x04
		printAt(self->pos, self->currentFreq);
     75c:	82 85       	ldd	r24, Z+10	; 0x0a
     75e:	93 85       	ldd	r25, Z+11	; 0x0b
     760:	0e 94 cf 01 	call	0x39e	; 0x39e <printAt>
     764:	08 95       	ret

00000766 <saveFreq>:
	}	
}


void saveFreq(PulseGenerator* self){	// Saves current frequency
     766:	fc 01       	movw	r30, r24
	self->savedFreq = self->currentFreq;
     768:	84 81       	ldd	r24, Z+4	; 0x04
     76a:	95 81       	ldd	r25, Z+5	; 0x05
     76c:	97 83       	std	Z+7, r25	; 0x07
     76e:	86 83       	std	Z+6, r24	; 0x06
	self->currentFreq = 0;
     770:	15 82       	std	Z+5, r1	; 0x05
     772:	14 82       	std	Z+4, r1	; 0x04
	self->saveBool = true;
     774:	81 e0       	ldi	r24, 0x01	; 1
     776:	84 87       	std	Z+12, r24	; 0x0c
	printAt(self->pos, self->currentFreq);
     778:	60 e0       	ldi	r22, 0x00	; 0
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	82 85       	ldd	r24, Z+10	; 0x0a
     77e:	93 85       	ldd	r25, Z+11	; 0x0b
     780:	0e 94 cf 01 	call	0x39e	; 0x39e <printAt>
     784:	08 95       	ret

00000786 <loadFreq>:
}


void loadFreq(PulseGenerator* self){	// Loads stored frequency
     786:	fc 01       	movw	r30, r24
	self->currentFreq = self->savedFreq;
     788:	66 81       	ldd	r22, Z+6	; 0x06
     78a:	77 81       	ldd	r23, Z+7	; 0x07
     78c:	75 83       	std	Z+5, r23	; 0x05
     78e:	64 83       	std	Z+4, r22	; 0x04
	self->saveBool = false;
     790:	14 86       	std	Z+12, r1	; 0x0c
	printAt(self->pos, self->currentFreq);
     792:	82 85       	ldd	r24, Z+10	; 0x0a
     794:	93 85       	ldd	r25, Z+11	; 0x0b
     796:	0e 94 cf 01 	call	0x39e	; 0x39e <printAt>
     79a:	08 95       	ret

0000079c <startDisplay>:
		}
	}
}

void startDisplay(PulseGenerator* self){
	printAt(self->pos, self->currentFreq);
     79c:	fc 01       	movw	r30, r24
     79e:	64 81       	ldd	r22, Z+4	; 0x04
     7a0:	75 81       	ldd	r23, Z+5	; 0x05
     7a2:	82 85       	ldd	r24, Z+10	; 0x0a
     7a4:	93 85       	ldd	r25, Z+11	; 0x0b
     7a6:	0e 94 cf 01 	call	0x39e	; 0x39e <printAt>
     7aa:	08 95       	ret

000007ac <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	00 d0       	rcall	.+0      	; 0x7b2 <initialize+0x6>
     7b2:	00 d0       	rcall	.+0      	; 0x7b4 <initialize+0x8>
     7b4:	cd b7       	in	r28, 0x3d	; 61
     7b6:	de b7       	in	r29, 0x3e	; 62
     7b8:	83 e4       	ldi	r24, 0x43	; 67
     7ba:	92 e0       	ldi	r25, 0x02	; 2
     7bc:	23 e2       	ldi	r18, 0x23	; 35
     7be:	33 e0       	ldi	r19, 0x03	; 3
     7c0:	fc 01       	movw	r30, r24
     7c2:	70 97       	sbiw	r30, 0x10	; 16
     7c4:	91 83       	std	Z+1, r25	; 0x01
     7c6:	80 83       	st	Z, r24
     7c8:	40 96       	adiw	r24, 0x10	; 16
     7ca:	82 17       	cp	r24, r18
     7cc:	93 07       	cpc	r25, r19
     7ce:	c1 f7       	brne	.-16     	; 0x7c0 <initialize+0x14>
     7d0:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     7d4:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     7d8:	ee e7       	ldi	r30, 0x7E	; 126
     7da:	f1 e0       	ldi	r31, 0x01	; 1
     7dc:	8b e9       	ldi	r24, 0x9B	; 155
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	91 83       	std	Z+1, r25	; 0x01
     7e2:	80 83       	st	Z, r24
     7e4:	88 eb       	ldi	r24, 0xB8	; 184
     7e6:	91 e0       	ldi	r25, 0x01	; 1
     7e8:	96 8f       	std	Z+30, r25	; 0x1e
     7ea:	85 8f       	std	Z+29, r24	; 0x1d
     7ec:	a5 ed       	ldi	r26, 0xD5	; 213
     7ee:	b1 e0       	ldi	r27, 0x01	; 1
     7f0:	b3 af       	std	Z+59, r27	; 0x3b
     7f2:	a2 af       	std	Z+58, r26	; 0x3a
     7f4:	1d 92       	st	X+, r1
     7f6:	1c 92       	st	X, r1
     7f8:	fa 83       	std	Y+2, r31	; 0x02
     7fa:	e9 83       	std	Y+1, r30	; 0x01
     7fc:	ef e7       	ldi	r30, 0x7F	; 127
     7fe:	f3 e0       	ldi	r31, 0x03	; 3
     800:	fc 83       	std	Y+4, r31	; 0x04
     802:	eb 83       	std	Y+3, r30	; 0x03
     804:	89 81       	ldd	r24, Y+1	; 0x01
     806:	9a 81       	ldd	r25, Y+2	; 0x02
     808:	06 96       	adiw	r24, 0x06	; 6
     80a:	0e 94 42 10 	call	0x2084	; 0x2084 <setjmp>
     80e:	8b 81       	ldd	r24, Y+3	; 0x03
     810:	9c 81       	ldd	r25, Y+4	; 0x04
     812:	e9 81       	ldd	r30, Y+1	; 0x01
     814:	fa 81       	ldd	r31, Y+2	; 0x02
     816:	97 8b       	std	Z+23, r25	; 0x17
     818:	86 8b       	std	Z+22, r24	; 0x16
     81a:	91 8f       	std	Z+25, r25	; 0x19
     81c:	80 8f       	std	Z+24, r24	; 0x18
     81e:	86 e7       	ldi	r24, 0x76	; 118
     820:	9f e0       	ldi	r25, 0x0F	; 15
     822:	94 8f       	std	Z+28, r25	; 0x1c
     824:	83 8f       	std	Z+27, r24	; 0x1b
     826:	15 82       	std	Z+5, r1	; 0x05
     828:	14 82       	std	Z+4, r1	; 0x04
     82a:	7d 96       	adiw	r30, 0x1d	; 29
     82c:	fa 83       	std	Y+2, r31	; 0x02
     82e:	e9 83       	std	Y+1, r30	; 0x01
     830:	eb 81       	ldd	r30, Y+3	; 0x03
     832:	fc 81       	ldd	r31, Y+4	; 0x04
     834:	e0 5a       	subi	r30, 0xA0	; 160
     836:	ff 4f       	sbci	r31, 0xFF	; 255
     838:	fc 83       	std	Y+4, r31	; 0x04
     83a:	eb 83       	std	Y+3, r30	; 0x03
     83c:	89 81       	ldd	r24, Y+1	; 0x01
     83e:	9a 81       	ldd	r25, Y+2	; 0x02
     840:	82 5f       	subi	r24, 0xF2	; 242
     842:	91 40       	sbci	r25, 0x01	; 1
     844:	f9 f6       	brne	.-66     	; 0x804 <initialize+0x58>
     846:	e6 e1       	ldi	r30, 0x16	; 22
     848:	f2 e0       	ldi	r31, 0x02	; 2
     84a:	11 82       	std	Z+1, r1	; 0x01
     84c:	10 82       	st	Z, r1
     84e:	15 82       	std	Z+5, r1	; 0x05
     850:	14 82       	std	Z+4, r1	; 0x04
     852:	13 82       	std	Z+3, r1	; 0x03
     854:	12 82       	std	Z+2, r1	; 0x02
     856:	e1 e6       	ldi	r30, 0x61	; 97
     858:	f0 e0       	ldi	r31, 0x00	; 0
     85a:	80 e8       	ldi	r24, 0x80	; 128
     85c:	80 83       	st	Z, r24
     85e:	10 82       	st	Z, r1
     860:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     864:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     868:	84 e0       	ldi	r24, 0x04	; 4
     86a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     86e:	81 e0       	ldi	r24, 0x01	; 1
     870:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     874:	0f 90       	pop	r0
     876:	0f 90       	pop	r0
     878:	0f 90       	pop	r0
     87a:	0f 90       	pop	r0
     87c:	df 91       	pop	r29
     87e:	cf 91       	pop	r28
     880:	08 95       	ret

00000882 <dispatch>:
     882:	cf 93       	push	r28
     884:	df 93       	push	r29
     886:	00 d0       	rcall	.+0      	; 0x888 <dispatch+0x6>
     888:	cd b7       	in	r28, 0x3d	; 61
     88a:	de b7       	in	r29, 0x3e	; 62
     88c:	9a 83       	std	Y+2, r25	; 0x02
     88e:	89 83       	std	Y+1, r24	; 0x01
     890:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <current>
     894:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <current+0x1>
     898:	06 96       	adiw	r24, 0x06	; 6
     89a:	0e 94 42 10 	call	0x2084	; 0x2084 <setjmp>
     89e:	89 2b       	or	r24, r25
     8a0:	59 f4       	brne	.+22     	; 0x8b8 <dispatch+0x36>
     8a2:	89 81       	ldd	r24, Y+1	; 0x01
     8a4:	9a 81       	ldd	r25, Y+2	; 0x02
     8a6:	90 93 44 01 	sts	0x0144, r25	; 0x800144 <current+0x1>
     8aa:	80 93 43 01 	sts	0x0143, r24	; 0x800143 <current>
     8ae:	61 e0       	ldi	r22, 0x01	; 1
     8b0:	70 e0       	ldi	r23, 0x00	; 0
     8b2:	06 96       	adiw	r24, 0x06	; 6
     8b4:	0e 94 62 10 	call	0x20c4	; 0x20c4 <longjmp>
     8b8:	0f 90       	pop	r0
     8ba:	0f 90       	pop	r0
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <schedule>:
     8c2:	0f 93       	push	r16
     8c4:	1f 93       	push	r17
     8c6:	cf 93       	push	r28
     8c8:	df 93       	push	r29
     8ca:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     8ce:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     8d2:	30 97       	sbiw	r30, 0x00	; 0
     8d4:	61 f1       	breq	.+88     	; 0x92e <schedule+0x6c>
     8d6:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <threadPool>
     8da:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <threadPool+0x1>
     8de:	00 97       	sbiw	r24, 0x00	; 0
     8e0:	31 f1       	breq	.+76     	; 0x92e <schedule+0x6c>
     8e2:	c0 91 45 01 	lds	r28, 0x0145	; 0x800145 <activeStack>
     8e6:	d0 91 46 01 	lds	r29, 0x0146	; 0x800146 <activeStack+0x1>
     8ea:	aa 81       	ldd	r26, Y+2	; 0x02
     8ec:	bb 81       	ldd	r27, Y+3	; 0x03
     8ee:	10 97       	sbiw	r26, 0x00	; 0
     8f0:	79 f0       	breq	.+30     	; 0x910 <schedule+0x4e>
     8f2:	46 81       	ldd	r20, Z+6	; 0x06
     8f4:	57 81       	ldd	r21, Z+7	; 0x07
     8f6:	60 85       	ldd	r22, Z+8	; 0x08
     8f8:	71 85       	ldd	r23, Z+9	; 0x09
     8fa:	16 96       	adiw	r26, 0x06	; 6
     8fc:	0d 91       	ld	r16, X+
     8fe:	1d 91       	ld	r17, X+
     900:	2d 91       	ld	r18, X+
     902:	3c 91       	ld	r19, X
     904:	19 97       	sbiw	r26, 0x09	; 9
     906:	40 1b       	sub	r20, r16
     908:	51 0b       	sbc	r21, r17
     90a:	62 0b       	sbc	r22, r18
     90c:	73 0b       	sbc	r23, r19
     90e:	7a f4       	brpl	.+30     	; 0x92e <schedule+0x6c>
     910:	fc 01       	movw	r30, r24
     912:	20 81       	ld	r18, Z
     914:	31 81       	ldd	r19, Z+1	; 0x01
     916:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <threadPool+0x1>
     91a:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <threadPool>
     91e:	d1 83       	std	Z+1, r29	; 0x01
     920:	c0 83       	st	Z, r28
     922:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <activeStack+0x1>
     926:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <activeStack>
     92a:	0e 94 41 04 	call	0x882	; 0x882 <dispatch>
     92e:	df 91       	pop	r29
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <__vector_1>:
     938:	1f 92       	push	r1
     93a:	0f 92       	push	r0
     93c:	0f b6       	in	r0, 0x3f	; 63
     93e:	0f 92       	push	r0
     940:	11 24       	eor	r1, r1
     942:	2f 93       	push	r18
     944:	3f 93       	push	r19
     946:	4f 93       	push	r20
     948:	5f 93       	push	r21
     94a:	6f 93       	push	r22
     94c:	7f 93       	push	r23
     94e:	8f 93       	push	r24
     950:	9f 93       	push	r25
     952:	af 93       	push	r26
     954:	bf 93       	push	r27
     956:	ef 93       	push	r30
     958:	ff 93       	push	r31
     95a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     95e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     962:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     966:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     96a:	c9 01       	movw	r24, r18
     96c:	03 2e       	mov	r0, r19
     96e:	00 0c       	add	r0, r0
     970:	aa 0b       	sbc	r26, r26
     972:	bb 0b       	sbc	r27, r27
     974:	dc 01       	movw	r26, r24
     976:	99 27       	eor	r25, r25
     978:	88 27       	eor	r24, r24
     97a:	60 e0       	ldi	r22, 0x00	; 0
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	84 2b       	or	r24, r20
     980:	95 2b       	or	r25, r21
     982:	a6 2b       	or	r26, r22
     984:	b7 2b       	or	r27, r23
     986:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     98a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     98e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     992:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     996:	b0 9b       	sbis	0x16, 0	; 22
     998:	1b c0       	rjmp	.+54     	; 0x9d0 <__vector_1+0x98>
     99a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     99e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9a2:	c9 01       	movw	r24, r18
     9a4:	01 96       	adiw	r24, 0x01	; 1
     9a6:	09 2e       	mov	r0, r25
     9a8:	00 0c       	add	r0, r0
     9aa:	aa 0b       	sbc	r26, r26
     9ac:	bb 0b       	sbc	r27, r27
     9ae:	dc 01       	movw	r26, r24
     9b0:	99 27       	eor	r25, r25
     9b2:	88 27       	eor	r24, r24
     9b4:	60 e0       	ldi	r22, 0x00	; 0
     9b6:	70 e0       	ldi	r23, 0x00	; 0
     9b8:	84 2b       	or	r24, r20
     9ba:	95 2b       	or	r25, r21
     9bc:	a6 2b       	or	r26, r22
     9be:	b7 2b       	or	r27, r23
     9c0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     9c4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     9c8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     9cc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     9d0:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     9d4:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     9d8:	30 97       	sbiw	r30, 0x00	; 0
     9da:	39 f0       	breq	.+14     	; 0x9ea <__vector_1+0xb2>
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	70 e0       	ldi	r23, 0x00	; 0
     9e0:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     9e4:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     9e8:	09 95       	icall
     9ea:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     9ee:	ff 91       	pop	r31
     9f0:	ef 91       	pop	r30
     9f2:	bf 91       	pop	r27
     9f4:	af 91       	pop	r26
     9f6:	9f 91       	pop	r25
     9f8:	8f 91       	pop	r24
     9fa:	7f 91       	pop	r23
     9fc:	6f 91       	pop	r22
     9fe:	5f 91       	pop	r21
     a00:	4f 91       	pop	r20
     a02:	3f 91       	pop	r19
     a04:	2f 91       	pop	r18
     a06:	0f 90       	pop	r0
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	0f 90       	pop	r0
     a0c:	1f 90       	pop	r1
     a0e:	18 95       	reti

00000a10 <__vector_2>:
     a10:	1f 92       	push	r1
     a12:	0f 92       	push	r0
     a14:	0f b6       	in	r0, 0x3f	; 63
     a16:	0f 92       	push	r0
     a18:	11 24       	eor	r1, r1
     a1a:	2f 93       	push	r18
     a1c:	3f 93       	push	r19
     a1e:	4f 93       	push	r20
     a20:	5f 93       	push	r21
     a22:	6f 93       	push	r22
     a24:	7f 93       	push	r23
     a26:	8f 93       	push	r24
     a28:	9f 93       	push	r25
     a2a:	af 93       	push	r26
     a2c:	bf 93       	push	r27
     a2e:	ef 93       	push	r30
     a30:	ff 93       	push	r31
     a32:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     a36:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     a3a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a3e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a42:	c9 01       	movw	r24, r18
     a44:	03 2e       	mov	r0, r19
     a46:	00 0c       	add	r0, r0
     a48:	aa 0b       	sbc	r26, r26
     a4a:	bb 0b       	sbc	r27, r27
     a4c:	dc 01       	movw	r26, r24
     a4e:	99 27       	eor	r25, r25
     a50:	88 27       	eor	r24, r24
     a52:	60 e0       	ldi	r22, 0x00	; 0
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	84 2b       	or	r24, r20
     a58:	95 2b       	or	r25, r21
     a5a:	a6 2b       	or	r26, r22
     a5c:	b7 2b       	or	r27, r23
     a5e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     a62:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     a66:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     a6a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     a6e:	b0 9b       	sbis	0x16, 0	; 22
     a70:	1b c0       	rjmp	.+54     	; 0xaa8 <__vector_2+0x98>
     a72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a7a:	c9 01       	movw	r24, r18
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	09 2e       	mov	r0, r25
     a80:	00 0c       	add	r0, r0
     a82:	aa 0b       	sbc	r26, r26
     a84:	bb 0b       	sbc	r27, r27
     a86:	dc 01       	movw	r26, r24
     a88:	99 27       	eor	r25, r25
     a8a:	88 27       	eor	r24, r24
     a8c:	60 e0       	ldi	r22, 0x00	; 0
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	84 2b       	or	r24, r20
     a92:	95 2b       	or	r25, r21
     a94:	a6 2b       	or	r26, r22
     a96:	b7 2b       	or	r27, r23
     a98:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     a9c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     aa0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     aa4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     aa8:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     aac:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     ab0:	30 97       	sbiw	r30, 0x00	; 0
     ab2:	39 f0       	breq	.+14     	; 0xac2 <__vector_2+0xb2>
     ab4:	61 e0       	ldi	r22, 0x01	; 1
     ab6:	70 e0       	ldi	r23, 0x00	; 0
     ab8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     abc:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     ac0:	09 95       	icall
     ac2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     ac6:	ff 91       	pop	r31
     ac8:	ef 91       	pop	r30
     aca:	bf 91       	pop	r27
     acc:	af 91       	pop	r26
     ace:	9f 91       	pop	r25
     ad0:	8f 91       	pop	r24
     ad2:	7f 91       	pop	r23
     ad4:	6f 91       	pop	r22
     ad6:	5f 91       	pop	r21
     ad8:	4f 91       	pop	r20
     ada:	3f 91       	pop	r19
     adc:	2f 91       	pop	r18
     ade:	0f 90       	pop	r0
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	0f 90       	pop	r0
     ae4:	1f 90       	pop	r1
     ae6:	18 95       	reti

00000ae8 <__vector_3>:
     ae8:	1f 92       	push	r1
     aea:	0f 92       	push	r0
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	0f 92       	push	r0
     af0:	11 24       	eor	r1, r1
     af2:	2f 93       	push	r18
     af4:	3f 93       	push	r19
     af6:	4f 93       	push	r20
     af8:	5f 93       	push	r21
     afa:	6f 93       	push	r22
     afc:	7f 93       	push	r23
     afe:	8f 93       	push	r24
     b00:	9f 93       	push	r25
     b02:	af 93       	push	r26
     b04:	bf 93       	push	r27
     b06:	ef 93       	push	r30
     b08:	ff 93       	push	r31
     b0a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     b0e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     b12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b1a:	c9 01       	movw	r24, r18
     b1c:	03 2e       	mov	r0, r19
     b1e:	00 0c       	add	r0, r0
     b20:	aa 0b       	sbc	r26, r26
     b22:	bb 0b       	sbc	r27, r27
     b24:	dc 01       	movw	r26, r24
     b26:	99 27       	eor	r25, r25
     b28:	88 27       	eor	r24, r24
     b2a:	60 e0       	ldi	r22, 0x00	; 0
     b2c:	70 e0       	ldi	r23, 0x00	; 0
     b2e:	84 2b       	or	r24, r20
     b30:	95 2b       	or	r25, r21
     b32:	a6 2b       	or	r26, r22
     b34:	b7 2b       	or	r27, r23
     b36:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b3a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b3e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b42:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b46:	b0 9b       	sbis	0x16, 0	; 22
     b48:	1b c0       	rjmp	.+54     	; 0xb80 <__vector_3+0x98>
     b4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b52:	c9 01       	movw	r24, r18
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	09 2e       	mov	r0, r25
     b58:	00 0c       	add	r0, r0
     b5a:	aa 0b       	sbc	r26, r26
     b5c:	bb 0b       	sbc	r27, r27
     b5e:	dc 01       	movw	r26, r24
     b60:	99 27       	eor	r25, r25
     b62:	88 27       	eor	r24, r24
     b64:	60 e0       	ldi	r22, 0x00	; 0
     b66:	70 e0       	ldi	r23, 0x00	; 0
     b68:	84 2b       	or	r24, r20
     b6a:	95 2b       	or	r25, r21
     b6c:	a6 2b       	or	r26, r22
     b6e:	b7 2b       	or	r27, r23
     b70:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     b74:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     b78:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     b7c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     b80:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
     b84:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
     b88:	30 97       	sbiw	r30, 0x00	; 0
     b8a:	39 f0       	breq	.+14     	; 0xb9a <__vector_3+0xb2>
     b8c:	62 e0       	ldi	r22, 0x02	; 2
     b8e:	70 e0       	ldi	r23, 0x00	; 0
     b90:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
     b94:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
     b98:	09 95       	icall
     b9a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     b9e:	ff 91       	pop	r31
     ba0:	ef 91       	pop	r30
     ba2:	bf 91       	pop	r27
     ba4:	af 91       	pop	r26
     ba6:	9f 91       	pop	r25
     ba8:	8f 91       	pop	r24
     baa:	7f 91       	pop	r23
     bac:	6f 91       	pop	r22
     bae:	5f 91       	pop	r21
     bb0:	4f 91       	pop	r20
     bb2:	3f 91       	pop	r19
     bb4:	2f 91       	pop	r18
     bb6:	0f 90       	pop	r0
     bb8:	0f be       	out	0x3f, r0	; 63
     bba:	0f 90       	pop	r0
     bbc:	1f 90       	pop	r1
     bbe:	18 95       	reti

00000bc0 <__vector_4>:
     bc0:	1f 92       	push	r1
     bc2:	0f 92       	push	r0
     bc4:	0f b6       	in	r0, 0x3f	; 63
     bc6:	0f 92       	push	r0
     bc8:	11 24       	eor	r1, r1
     bca:	2f 93       	push	r18
     bcc:	3f 93       	push	r19
     bce:	4f 93       	push	r20
     bd0:	5f 93       	push	r21
     bd2:	6f 93       	push	r22
     bd4:	7f 93       	push	r23
     bd6:	8f 93       	push	r24
     bd8:	9f 93       	push	r25
     bda:	af 93       	push	r26
     bdc:	bf 93       	push	r27
     bde:	ef 93       	push	r30
     be0:	ff 93       	push	r31
     be2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     be6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     bea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bf2:	c9 01       	movw	r24, r18
     bf4:	03 2e       	mov	r0, r19
     bf6:	00 0c       	add	r0, r0
     bf8:	aa 0b       	sbc	r26, r26
     bfa:	bb 0b       	sbc	r27, r27
     bfc:	dc 01       	movw	r26, r24
     bfe:	99 27       	eor	r25, r25
     c00:	88 27       	eor	r24, r24
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	84 2b       	or	r24, r20
     c08:	95 2b       	or	r25, r21
     c0a:	a6 2b       	or	r26, r22
     c0c:	b7 2b       	or	r27, r23
     c0e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c12:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c16:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c1a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c1e:	b0 9b       	sbis	0x16, 0	; 22
     c20:	1b c0       	rjmp	.+54     	; 0xc58 <__vector_4+0x98>
     c22:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c26:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c2a:	c9 01       	movw	r24, r18
     c2c:	01 96       	adiw	r24, 0x01	; 1
     c2e:	09 2e       	mov	r0, r25
     c30:	00 0c       	add	r0, r0
     c32:	aa 0b       	sbc	r26, r26
     c34:	bb 0b       	sbc	r27, r27
     c36:	dc 01       	movw	r26, r24
     c38:	99 27       	eor	r25, r25
     c3a:	88 27       	eor	r24, r24
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	84 2b       	or	r24, r20
     c42:	95 2b       	or	r25, r21
     c44:	a6 2b       	or	r26, r22
     c46:	b7 2b       	or	r27, r23
     c48:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     c4c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     c50:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     c54:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     c58:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
     c5c:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
     c60:	30 97       	sbiw	r30, 0x00	; 0
     c62:	39 f0       	breq	.+14     	; 0xc72 <__vector_4+0xb2>
     c64:	63 e0       	ldi	r22, 0x03	; 3
     c66:	70 e0       	ldi	r23, 0x00	; 0
     c68:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
     c6c:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
     c70:	09 95       	icall
     c72:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     c76:	ff 91       	pop	r31
     c78:	ef 91       	pop	r30
     c7a:	bf 91       	pop	r27
     c7c:	af 91       	pop	r26
     c7e:	9f 91       	pop	r25
     c80:	8f 91       	pop	r24
     c82:	7f 91       	pop	r23
     c84:	6f 91       	pop	r22
     c86:	5f 91       	pop	r21
     c88:	4f 91       	pop	r20
     c8a:	3f 91       	pop	r19
     c8c:	2f 91       	pop	r18
     c8e:	0f 90       	pop	r0
     c90:	0f be       	out	0x3f, r0	; 63
     c92:	0f 90       	pop	r0
     c94:	1f 90       	pop	r1
     c96:	18 95       	reti

00000c98 <__vector_5>:
     c98:	1f 92       	push	r1
     c9a:	0f 92       	push	r0
     c9c:	0f b6       	in	r0, 0x3f	; 63
     c9e:	0f 92       	push	r0
     ca0:	11 24       	eor	r1, r1
     ca2:	2f 93       	push	r18
     ca4:	3f 93       	push	r19
     ca6:	4f 93       	push	r20
     ca8:	5f 93       	push	r21
     caa:	6f 93       	push	r22
     cac:	7f 93       	push	r23
     cae:	8f 93       	push	r24
     cb0:	9f 93       	push	r25
     cb2:	af 93       	push	r26
     cb4:	bf 93       	push	r27
     cb6:	ef 93       	push	r30
     cb8:	ff 93       	push	r31
     cba:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     cbe:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     cc2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cc6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cca:	c9 01       	movw	r24, r18
     ccc:	03 2e       	mov	r0, r19
     cce:	00 0c       	add	r0, r0
     cd0:	aa 0b       	sbc	r26, r26
     cd2:	bb 0b       	sbc	r27, r27
     cd4:	dc 01       	movw	r26, r24
     cd6:	99 27       	eor	r25, r25
     cd8:	88 27       	eor	r24, r24
     cda:	60 e0       	ldi	r22, 0x00	; 0
     cdc:	70 e0       	ldi	r23, 0x00	; 0
     cde:	84 2b       	or	r24, r20
     ce0:	95 2b       	or	r25, r21
     ce2:	a6 2b       	or	r26, r22
     ce4:	b7 2b       	or	r27, r23
     ce6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     cea:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     cee:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     cf2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     cf6:	b0 9b       	sbis	0x16, 0	; 22
     cf8:	1b c0       	rjmp	.+54     	; 0xd30 <__vector_5+0x98>
     cfa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cfe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d02:	c9 01       	movw	r24, r18
     d04:	01 96       	adiw	r24, 0x01	; 1
     d06:	09 2e       	mov	r0, r25
     d08:	00 0c       	add	r0, r0
     d0a:	aa 0b       	sbc	r26, r26
     d0c:	bb 0b       	sbc	r27, r27
     d0e:	dc 01       	movw	r26, r24
     d10:	99 27       	eor	r25, r25
     d12:	88 27       	eor	r24, r24
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	84 2b       	or	r24, r20
     d1a:	95 2b       	or	r25, r21
     d1c:	a6 2b       	or	r26, r22
     d1e:	b7 2b       	or	r27, r23
     d20:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     d24:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     d28:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     d2c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     d30:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
     d34:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
     d38:	30 97       	sbiw	r30, 0x00	; 0
     d3a:	39 f0       	breq	.+14     	; 0xd4a <__vector_5+0xb2>
     d3c:	64 e0       	ldi	r22, 0x04	; 4
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
     d44:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
     d48:	09 95       	icall
     d4a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     d4e:	ff 91       	pop	r31
     d50:	ef 91       	pop	r30
     d52:	bf 91       	pop	r27
     d54:	af 91       	pop	r26
     d56:	9f 91       	pop	r25
     d58:	8f 91       	pop	r24
     d5a:	7f 91       	pop	r23
     d5c:	6f 91       	pop	r22
     d5e:	5f 91       	pop	r21
     d60:	4f 91       	pop	r20
     d62:	3f 91       	pop	r19
     d64:	2f 91       	pop	r18
     d66:	0f 90       	pop	r0
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	0f 90       	pop	r0
     d6c:	1f 90       	pop	r1
     d6e:	18 95       	reti

00000d70 <__vector_10>:
     d70:	1f 92       	push	r1
     d72:	0f 92       	push	r0
     d74:	0f b6       	in	r0, 0x3f	; 63
     d76:	0f 92       	push	r0
     d78:	11 24       	eor	r1, r1
     d7a:	2f 93       	push	r18
     d7c:	3f 93       	push	r19
     d7e:	4f 93       	push	r20
     d80:	5f 93       	push	r21
     d82:	6f 93       	push	r22
     d84:	7f 93       	push	r23
     d86:	8f 93       	push	r24
     d88:	9f 93       	push	r25
     d8a:	af 93       	push	r26
     d8c:	bf 93       	push	r27
     d8e:	ef 93       	push	r30
     d90:	ff 93       	push	r31
     d92:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     d96:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     d9a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d9e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     da2:	c9 01       	movw	r24, r18
     da4:	03 2e       	mov	r0, r19
     da6:	00 0c       	add	r0, r0
     da8:	aa 0b       	sbc	r26, r26
     daa:	bb 0b       	sbc	r27, r27
     dac:	dc 01       	movw	r26, r24
     dae:	99 27       	eor	r25, r25
     db0:	88 27       	eor	r24, r24
     db2:	60 e0       	ldi	r22, 0x00	; 0
     db4:	70 e0       	ldi	r23, 0x00	; 0
     db6:	84 2b       	or	r24, r20
     db8:	95 2b       	or	r25, r21
     dba:	a6 2b       	or	r26, r22
     dbc:	b7 2b       	or	r27, r23
     dbe:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     dc2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     dc6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     dca:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     dce:	b0 9b       	sbis	0x16, 0	; 22
     dd0:	1b c0       	rjmp	.+54     	; 0xe08 <__vector_10+0x98>
     dd2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dd6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dda:	c9 01       	movw	r24, r18
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	09 2e       	mov	r0, r25
     de0:	00 0c       	add	r0, r0
     de2:	aa 0b       	sbc	r26, r26
     de4:	bb 0b       	sbc	r27, r27
     de6:	dc 01       	movw	r26, r24
     de8:	99 27       	eor	r25, r25
     dea:	88 27       	eor	r24, r24
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	84 2b       	or	r24, r20
     df2:	95 2b       	or	r25, r21
     df4:	a6 2b       	or	r26, r22
     df6:	b7 2b       	or	r27, r23
     df8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     dfc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e00:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     e04:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     e08:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
     e0c:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
     e10:	30 97       	sbiw	r30, 0x00	; 0
     e12:	39 f0       	breq	.+14     	; 0xe22 <__vector_10+0xb2>
     e14:	65 e0       	ldi	r22, 0x05	; 5
     e16:	70 e0       	ldi	r23, 0x00	; 0
     e18:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
     e1c:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
     e20:	09 95       	icall
     e22:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     e26:	ff 91       	pop	r31
     e28:	ef 91       	pop	r30
     e2a:	bf 91       	pop	r27
     e2c:	af 91       	pop	r26
     e2e:	9f 91       	pop	r25
     e30:	8f 91       	pop	r24
     e32:	7f 91       	pop	r23
     e34:	6f 91       	pop	r22
     e36:	5f 91       	pop	r21
     e38:	4f 91       	pop	r20
     e3a:	3f 91       	pop	r19
     e3c:	2f 91       	pop	r18
     e3e:	0f 90       	pop	r0
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	0f 90       	pop	r0
     e44:	1f 90       	pop	r1
     e46:	18 95       	reti

00000e48 <__vector_11>:
     e48:	1f 92       	push	r1
     e4a:	0f 92       	push	r0
     e4c:	0f b6       	in	r0, 0x3f	; 63
     e4e:	0f 92       	push	r0
     e50:	11 24       	eor	r1, r1
     e52:	2f 93       	push	r18
     e54:	3f 93       	push	r19
     e56:	4f 93       	push	r20
     e58:	5f 93       	push	r21
     e5a:	6f 93       	push	r22
     e5c:	7f 93       	push	r23
     e5e:	8f 93       	push	r24
     e60:	9f 93       	push	r25
     e62:	af 93       	push	r26
     e64:	bf 93       	push	r27
     e66:	ef 93       	push	r30
     e68:	ff 93       	push	r31
     e6a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     e6e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     e72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e7a:	c9 01       	movw	r24, r18
     e7c:	03 2e       	mov	r0, r19
     e7e:	00 0c       	add	r0, r0
     e80:	aa 0b       	sbc	r26, r26
     e82:	bb 0b       	sbc	r27, r27
     e84:	dc 01       	movw	r26, r24
     e86:	99 27       	eor	r25, r25
     e88:	88 27       	eor	r24, r24
     e8a:	60 e0       	ldi	r22, 0x00	; 0
     e8c:	70 e0       	ldi	r23, 0x00	; 0
     e8e:	84 2b       	or	r24, r20
     e90:	95 2b       	or	r25, r21
     e92:	a6 2b       	or	r26, r22
     e94:	b7 2b       	or	r27, r23
     e96:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     e9a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     e9e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ea2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     ea6:	b0 9b       	sbis	0x16, 0	; 22
     ea8:	1b c0       	rjmp	.+54     	; 0xee0 <__vector_11+0x98>
     eaa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     eb2:	c9 01       	movw	r24, r18
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	09 2e       	mov	r0, r25
     eb8:	00 0c       	add	r0, r0
     eba:	aa 0b       	sbc	r26, r26
     ebc:	bb 0b       	sbc	r27, r27
     ebe:	dc 01       	movw	r26, r24
     ec0:	99 27       	eor	r25, r25
     ec2:	88 27       	eor	r24, r24
     ec4:	60 e0       	ldi	r22, 0x00	; 0
     ec6:	70 e0       	ldi	r23, 0x00	; 0
     ec8:	84 2b       	or	r24, r20
     eca:	95 2b       	or	r25, r21
     ecc:	a6 2b       	or	r26, r22
     ece:	b7 2b       	or	r27, r23
     ed0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     ed4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ed8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     edc:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     ee0:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
     ee4:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
     ee8:	30 97       	sbiw	r30, 0x00	; 0
     eea:	39 f0       	breq	.+14     	; 0xefa <__vector_11+0xb2>
     eec:	66 e0       	ldi	r22, 0x06	; 6
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
     ef4:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
     ef8:	09 95       	icall
     efa:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     efe:	ff 91       	pop	r31
     f00:	ef 91       	pop	r30
     f02:	bf 91       	pop	r27
     f04:	af 91       	pop	r26
     f06:	9f 91       	pop	r25
     f08:	8f 91       	pop	r24
     f0a:	7f 91       	pop	r23
     f0c:	6f 91       	pop	r22
     f0e:	5f 91       	pop	r21
     f10:	4f 91       	pop	r20
     f12:	3f 91       	pop	r19
     f14:	2f 91       	pop	r18
     f16:	0f 90       	pop	r0
     f18:	0f be       	out	0x3f, r0	; 63
     f1a:	0f 90       	pop	r0
     f1c:	1f 90       	pop	r1
     f1e:	18 95       	reti

00000f20 <__vector_12>:
     f20:	1f 92       	push	r1
     f22:	0f 92       	push	r0
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	0f 92       	push	r0
     f28:	11 24       	eor	r1, r1
     f2a:	2f 93       	push	r18
     f2c:	3f 93       	push	r19
     f2e:	4f 93       	push	r20
     f30:	5f 93       	push	r21
     f32:	6f 93       	push	r22
     f34:	7f 93       	push	r23
     f36:	8f 93       	push	r24
     f38:	9f 93       	push	r25
     f3a:	af 93       	push	r26
     f3c:	bf 93       	push	r27
     f3e:	ef 93       	push	r30
     f40:	ff 93       	push	r31
     f42:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
     f46:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
     f4a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f4e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f52:	c9 01       	movw	r24, r18
     f54:	03 2e       	mov	r0, r19
     f56:	00 0c       	add	r0, r0
     f58:	aa 0b       	sbc	r26, r26
     f5a:	bb 0b       	sbc	r27, r27
     f5c:	dc 01       	movw	r26, r24
     f5e:	99 27       	eor	r25, r25
     f60:	88 27       	eor	r24, r24
     f62:	60 e0       	ldi	r22, 0x00	; 0
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	84 2b       	or	r24, r20
     f68:	95 2b       	or	r25, r21
     f6a:	a6 2b       	or	r26, r22
     f6c:	b7 2b       	or	r27, r23
     f6e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     f72:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     f76:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     f7a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     f7e:	b0 9b       	sbis	0x16, 0	; 22
     f80:	1b c0       	rjmp	.+54     	; 0xfb8 <__vector_12+0x98>
     f82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f8a:	c9 01       	movw	r24, r18
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	09 2e       	mov	r0, r25
     f90:	00 0c       	add	r0, r0
     f92:	aa 0b       	sbc	r26, r26
     f94:	bb 0b       	sbc	r27, r27
     f96:	dc 01       	movw	r26, r24
     f98:	99 27       	eor	r25, r25
     f9a:	88 27       	eor	r24, r24
     f9c:	60 e0       	ldi	r22, 0x00	; 0
     f9e:	70 e0       	ldi	r23, 0x00	; 0
     fa0:	84 2b       	or	r24, r20
     fa2:	95 2b       	or	r25, r21
     fa4:	a6 2b       	or	r26, r22
     fa6:	b7 2b       	or	r27, r23
     fa8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     fac:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     fb0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     fb4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     fb8:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
     fbc:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
     fc0:	30 97       	sbiw	r30, 0x00	; 0
     fc2:	39 f0       	breq	.+14     	; 0xfd2 <__vector_12+0xb2>
     fc4:	67 e0       	ldi	r22, 0x07	; 7
     fc6:	70 e0       	ldi	r23, 0x00	; 0
     fc8:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
     fcc:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
     fd0:	09 95       	icall
     fd2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
     fd6:	ff 91       	pop	r31
     fd8:	ef 91       	pop	r30
     fda:	bf 91       	pop	r27
     fdc:	af 91       	pop	r26
     fde:	9f 91       	pop	r25
     fe0:	8f 91       	pop	r24
     fe2:	7f 91       	pop	r23
     fe4:	6f 91       	pop	r22
     fe6:	5f 91       	pop	r21
     fe8:	4f 91       	pop	r20
     fea:	3f 91       	pop	r19
     fec:	2f 91       	pop	r18
     fee:	0f 90       	pop	r0
     ff0:	0f be       	out	0x3f, r0	; 63
     ff2:	0f 90       	pop	r0
     ff4:	1f 90       	pop	r1
     ff6:	18 95       	reti

00000ff8 <__vector_13>:
     ff8:	1f 92       	push	r1
     ffa:	0f 92       	push	r0
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	0f 92       	push	r0
    1000:	11 24       	eor	r1, r1
    1002:	2f 93       	push	r18
    1004:	3f 93       	push	r19
    1006:	4f 93       	push	r20
    1008:	5f 93       	push	r21
    100a:	6f 93       	push	r22
    100c:	7f 93       	push	r23
    100e:	8f 93       	push	r24
    1010:	9f 93       	push	r25
    1012:	af 93       	push	r26
    1014:	bf 93       	push	r27
    1016:	ef 93       	push	r30
    1018:	ff 93       	push	r31
    101a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    101e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1022:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1026:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    102a:	c9 01       	movw	r24, r18
    102c:	03 2e       	mov	r0, r19
    102e:	00 0c       	add	r0, r0
    1030:	aa 0b       	sbc	r26, r26
    1032:	bb 0b       	sbc	r27, r27
    1034:	dc 01       	movw	r26, r24
    1036:	99 27       	eor	r25, r25
    1038:	88 27       	eor	r24, r24
    103a:	60 e0       	ldi	r22, 0x00	; 0
    103c:	70 e0       	ldi	r23, 0x00	; 0
    103e:	84 2b       	or	r24, r20
    1040:	95 2b       	or	r25, r21
    1042:	a6 2b       	or	r26, r22
    1044:	b7 2b       	or	r27, r23
    1046:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    104a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    104e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1052:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1056:	b0 9b       	sbis	0x16, 0	; 22
    1058:	1b c0       	rjmp	.+54     	; 0x1090 <__vector_13+0x98>
    105a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    105e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1062:	c9 01       	movw	r24, r18
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	09 2e       	mov	r0, r25
    1068:	00 0c       	add	r0, r0
    106a:	aa 0b       	sbc	r26, r26
    106c:	bb 0b       	sbc	r27, r27
    106e:	dc 01       	movw	r26, r24
    1070:	99 27       	eor	r25, r25
    1072:	88 27       	eor	r24, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	84 2b       	or	r24, r20
    107a:	95 2b       	or	r25, r21
    107c:	a6 2b       	or	r26, r22
    107e:	b7 2b       	or	r27, r23
    1080:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1084:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1088:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    108c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1090:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    1094:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    1098:	30 97       	sbiw	r30, 0x00	; 0
    109a:	39 f0       	breq	.+14     	; 0x10aa <__vector_13+0xb2>
    109c:	68 e0       	ldi	r22, 0x08	; 8
    109e:	70 e0       	ldi	r23, 0x00	; 0
    10a0:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    10a4:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    10a8:	09 95       	icall
    10aa:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    10ae:	ff 91       	pop	r31
    10b0:	ef 91       	pop	r30
    10b2:	bf 91       	pop	r27
    10b4:	af 91       	pop	r26
    10b6:	9f 91       	pop	r25
    10b8:	8f 91       	pop	r24
    10ba:	7f 91       	pop	r23
    10bc:	6f 91       	pop	r22
    10be:	5f 91       	pop	r21
    10c0:	4f 91       	pop	r20
    10c2:	3f 91       	pop	r19
    10c4:	2f 91       	pop	r18
    10c6:	0f 90       	pop	r0
    10c8:	0f be       	out	0x3f, r0	; 63
    10ca:	0f 90       	pop	r0
    10cc:	1f 90       	pop	r1
    10ce:	18 95       	reti

000010d0 <__vector_14>:
    10d0:	1f 92       	push	r1
    10d2:	0f 92       	push	r0
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	0f 92       	push	r0
    10d8:	11 24       	eor	r1, r1
    10da:	2f 93       	push	r18
    10dc:	3f 93       	push	r19
    10de:	4f 93       	push	r20
    10e0:	5f 93       	push	r21
    10e2:	6f 93       	push	r22
    10e4:	7f 93       	push	r23
    10e6:	8f 93       	push	r24
    10e8:	9f 93       	push	r25
    10ea:	af 93       	push	r26
    10ec:	bf 93       	push	r27
    10ee:	ef 93       	push	r30
    10f0:	ff 93       	push	r31
    10f2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    10f6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    10fa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10fe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1102:	c9 01       	movw	r24, r18
    1104:	03 2e       	mov	r0, r19
    1106:	00 0c       	add	r0, r0
    1108:	aa 0b       	sbc	r26, r26
    110a:	bb 0b       	sbc	r27, r27
    110c:	dc 01       	movw	r26, r24
    110e:	99 27       	eor	r25, r25
    1110:	88 27       	eor	r24, r24
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	84 2b       	or	r24, r20
    1118:	95 2b       	or	r25, r21
    111a:	a6 2b       	or	r26, r22
    111c:	b7 2b       	or	r27, r23
    111e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1122:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1126:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    112a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    112e:	b0 9b       	sbis	0x16, 0	; 22
    1130:	1b c0       	rjmp	.+54     	; 0x1168 <__vector_14+0x98>
    1132:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1136:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    113a:	c9 01       	movw	r24, r18
    113c:	01 96       	adiw	r24, 0x01	; 1
    113e:	09 2e       	mov	r0, r25
    1140:	00 0c       	add	r0, r0
    1142:	aa 0b       	sbc	r26, r26
    1144:	bb 0b       	sbc	r27, r27
    1146:	dc 01       	movw	r26, r24
    1148:	99 27       	eor	r25, r25
    114a:	88 27       	eor	r24, r24
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	70 e0       	ldi	r23, 0x00	; 0
    1150:	84 2b       	or	r24, r20
    1152:	95 2b       	or	r25, r21
    1154:	a6 2b       	or	r26, r22
    1156:	b7 2b       	or	r27, r23
    1158:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    115c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1160:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1164:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1168:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    116c:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    1170:	30 97       	sbiw	r30, 0x00	; 0
    1172:	39 f0       	breq	.+14     	; 0x1182 <__vector_14+0xb2>
    1174:	69 e0       	ldi	r22, 0x09	; 9
    1176:	70 e0       	ldi	r23, 0x00	; 0
    1178:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    117c:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    1180:	09 95       	icall
    1182:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    1186:	ff 91       	pop	r31
    1188:	ef 91       	pop	r30
    118a:	bf 91       	pop	r27
    118c:	af 91       	pop	r26
    118e:	9f 91       	pop	r25
    1190:	8f 91       	pop	r24
    1192:	7f 91       	pop	r23
    1194:	6f 91       	pop	r22
    1196:	5f 91       	pop	r21
    1198:	4f 91       	pop	r20
    119a:	3f 91       	pop	r19
    119c:	2f 91       	pop	r18
    119e:	0f 90       	pop	r0
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	0f 90       	pop	r0
    11a4:	1f 90       	pop	r1
    11a6:	18 95       	reti

000011a8 <__vector_15>:
    11a8:	1f 92       	push	r1
    11aa:	0f 92       	push	r0
    11ac:	0f b6       	in	r0, 0x3f	; 63
    11ae:	0f 92       	push	r0
    11b0:	11 24       	eor	r1, r1
    11b2:	2f 93       	push	r18
    11b4:	3f 93       	push	r19
    11b6:	4f 93       	push	r20
    11b8:	5f 93       	push	r21
    11ba:	6f 93       	push	r22
    11bc:	7f 93       	push	r23
    11be:	8f 93       	push	r24
    11c0:	9f 93       	push	r25
    11c2:	af 93       	push	r26
    11c4:	bf 93       	push	r27
    11c6:	ef 93       	push	r30
    11c8:	ff 93       	push	r31
    11ca:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    11ce:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    11d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11da:	c9 01       	movw	r24, r18
    11dc:	03 2e       	mov	r0, r19
    11de:	00 0c       	add	r0, r0
    11e0:	aa 0b       	sbc	r26, r26
    11e2:	bb 0b       	sbc	r27, r27
    11e4:	dc 01       	movw	r26, r24
    11e6:	99 27       	eor	r25, r25
    11e8:	88 27       	eor	r24, r24
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	84 2b       	or	r24, r20
    11f0:	95 2b       	or	r25, r21
    11f2:	a6 2b       	or	r26, r22
    11f4:	b7 2b       	or	r27, r23
    11f6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    11fa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    11fe:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1202:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1206:	b0 9b       	sbis	0x16, 0	; 22
    1208:	1b c0       	rjmp	.+54     	; 0x1240 <__vector_15+0x98>
    120a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    120e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1212:	c9 01       	movw	r24, r18
    1214:	01 96       	adiw	r24, 0x01	; 1
    1216:	09 2e       	mov	r0, r25
    1218:	00 0c       	add	r0, r0
    121a:	aa 0b       	sbc	r26, r26
    121c:	bb 0b       	sbc	r27, r27
    121e:	dc 01       	movw	r26, r24
    1220:	99 27       	eor	r25, r25
    1222:	88 27       	eor	r24, r24
    1224:	60 e0       	ldi	r22, 0x00	; 0
    1226:	70 e0       	ldi	r23, 0x00	; 0
    1228:	84 2b       	or	r24, r20
    122a:	95 2b       	or	r25, r21
    122c:	a6 2b       	or	r26, r22
    122e:	b7 2b       	or	r27, r23
    1230:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1234:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1238:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    123c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1240:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    1244:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    1248:	30 97       	sbiw	r30, 0x00	; 0
    124a:	39 f0       	breq	.+14     	; 0x125a <__vector_15+0xb2>
    124c:	6a e0       	ldi	r22, 0x0A	; 10
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    1254:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    1258:	09 95       	icall
    125a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    125e:	ff 91       	pop	r31
    1260:	ef 91       	pop	r30
    1262:	bf 91       	pop	r27
    1264:	af 91       	pop	r26
    1266:	9f 91       	pop	r25
    1268:	8f 91       	pop	r24
    126a:	7f 91       	pop	r23
    126c:	6f 91       	pop	r22
    126e:	5f 91       	pop	r21
    1270:	4f 91       	pop	r20
    1272:	3f 91       	pop	r19
    1274:	2f 91       	pop	r18
    1276:	0f 90       	pop	r0
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	0f 90       	pop	r0
    127c:	1f 90       	pop	r1
    127e:	18 95       	reti

00001280 <__vector_16>:
    1280:	1f 92       	push	r1
    1282:	0f 92       	push	r0
    1284:	0f b6       	in	r0, 0x3f	; 63
    1286:	0f 92       	push	r0
    1288:	11 24       	eor	r1, r1
    128a:	2f 93       	push	r18
    128c:	3f 93       	push	r19
    128e:	4f 93       	push	r20
    1290:	5f 93       	push	r21
    1292:	6f 93       	push	r22
    1294:	7f 93       	push	r23
    1296:	8f 93       	push	r24
    1298:	9f 93       	push	r25
    129a:	af 93       	push	r26
    129c:	bf 93       	push	r27
    129e:	ef 93       	push	r30
    12a0:	ff 93       	push	r31
    12a2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    12a6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    12aa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12ae:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12b2:	c9 01       	movw	r24, r18
    12b4:	03 2e       	mov	r0, r19
    12b6:	00 0c       	add	r0, r0
    12b8:	aa 0b       	sbc	r26, r26
    12ba:	bb 0b       	sbc	r27, r27
    12bc:	dc 01       	movw	r26, r24
    12be:	99 27       	eor	r25, r25
    12c0:	88 27       	eor	r24, r24
    12c2:	60 e0       	ldi	r22, 0x00	; 0
    12c4:	70 e0       	ldi	r23, 0x00	; 0
    12c6:	84 2b       	or	r24, r20
    12c8:	95 2b       	or	r25, r21
    12ca:	a6 2b       	or	r26, r22
    12cc:	b7 2b       	or	r27, r23
    12ce:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    12d2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    12d6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    12da:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    12de:	b0 9b       	sbis	0x16, 0	; 22
    12e0:	1b c0       	rjmp	.+54     	; 0x1318 <__vector_16+0x98>
    12e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12ea:	c9 01       	movw	r24, r18
    12ec:	01 96       	adiw	r24, 0x01	; 1
    12ee:	09 2e       	mov	r0, r25
    12f0:	00 0c       	add	r0, r0
    12f2:	aa 0b       	sbc	r26, r26
    12f4:	bb 0b       	sbc	r27, r27
    12f6:	dc 01       	movw	r26, r24
    12f8:	99 27       	eor	r25, r25
    12fa:	88 27       	eor	r24, r24
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	84 2b       	or	r24, r20
    1302:	95 2b       	or	r25, r21
    1304:	a6 2b       	or	r26, r22
    1306:	b7 2b       	or	r27, r23
    1308:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    130c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1310:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1314:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1318:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    131c:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    1320:	30 97       	sbiw	r30, 0x00	; 0
    1322:	39 f0       	breq	.+14     	; 0x1332 <__vector_16+0xb2>
    1324:	6b e0       	ldi	r22, 0x0B	; 11
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    132c:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    1330:	09 95       	icall
    1332:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    1336:	ff 91       	pop	r31
    1338:	ef 91       	pop	r30
    133a:	bf 91       	pop	r27
    133c:	af 91       	pop	r26
    133e:	9f 91       	pop	r25
    1340:	8f 91       	pop	r24
    1342:	7f 91       	pop	r23
    1344:	6f 91       	pop	r22
    1346:	5f 91       	pop	r21
    1348:	4f 91       	pop	r20
    134a:	3f 91       	pop	r19
    134c:	2f 91       	pop	r18
    134e:	0f 90       	pop	r0
    1350:	0f be       	out	0x3f, r0	; 63
    1352:	0f 90       	pop	r0
    1354:	1f 90       	pop	r1
    1356:	18 95       	reti

00001358 <__vector_17>:
    1358:	1f 92       	push	r1
    135a:	0f 92       	push	r0
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	0f 92       	push	r0
    1360:	11 24       	eor	r1, r1
    1362:	2f 93       	push	r18
    1364:	3f 93       	push	r19
    1366:	4f 93       	push	r20
    1368:	5f 93       	push	r21
    136a:	6f 93       	push	r22
    136c:	7f 93       	push	r23
    136e:	8f 93       	push	r24
    1370:	9f 93       	push	r25
    1372:	af 93       	push	r26
    1374:	bf 93       	push	r27
    1376:	ef 93       	push	r30
    1378:	ff 93       	push	r31
    137a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    137e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1382:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1386:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    138a:	c9 01       	movw	r24, r18
    138c:	03 2e       	mov	r0, r19
    138e:	00 0c       	add	r0, r0
    1390:	aa 0b       	sbc	r26, r26
    1392:	bb 0b       	sbc	r27, r27
    1394:	dc 01       	movw	r26, r24
    1396:	99 27       	eor	r25, r25
    1398:	88 27       	eor	r24, r24
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	70 e0       	ldi	r23, 0x00	; 0
    139e:	84 2b       	or	r24, r20
    13a0:	95 2b       	or	r25, r21
    13a2:	a6 2b       	or	r26, r22
    13a4:	b7 2b       	or	r27, r23
    13a6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    13aa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13ae:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13b2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13b6:	b0 9b       	sbis	0x16, 0	; 22
    13b8:	1b c0       	rjmp	.+54     	; 0x13f0 <__vector_17+0x98>
    13ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13c2:	c9 01       	movw	r24, r18
    13c4:	01 96       	adiw	r24, 0x01	; 1
    13c6:	09 2e       	mov	r0, r25
    13c8:	00 0c       	add	r0, r0
    13ca:	aa 0b       	sbc	r26, r26
    13cc:	bb 0b       	sbc	r27, r27
    13ce:	dc 01       	movw	r26, r24
    13d0:	99 27       	eor	r25, r25
    13d2:	88 27       	eor	r24, r24
    13d4:	60 e0       	ldi	r22, 0x00	; 0
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	84 2b       	or	r24, r20
    13da:	95 2b       	or	r25, r21
    13dc:	a6 2b       	or	r26, r22
    13de:	b7 2b       	or	r27, r23
    13e0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    13e4:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    13e8:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    13ec:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    13f0:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    13f4:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    13f8:	30 97       	sbiw	r30, 0x00	; 0
    13fa:	39 f0       	breq	.+14     	; 0x140a <__vector_17+0xb2>
    13fc:	6c e0       	ldi	r22, 0x0C	; 12
    13fe:	70 e0       	ldi	r23, 0x00	; 0
    1400:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    1404:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    1408:	09 95       	icall
    140a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    140e:	ff 91       	pop	r31
    1410:	ef 91       	pop	r30
    1412:	bf 91       	pop	r27
    1414:	af 91       	pop	r26
    1416:	9f 91       	pop	r25
    1418:	8f 91       	pop	r24
    141a:	7f 91       	pop	r23
    141c:	6f 91       	pop	r22
    141e:	5f 91       	pop	r21
    1420:	4f 91       	pop	r20
    1422:	3f 91       	pop	r19
    1424:	2f 91       	pop	r18
    1426:	0f 90       	pop	r0
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	0f 90       	pop	r0
    142c:	1f 90       	pop	r1
    142e:	18 95       	reti

00001430 <__vector_18>:
    1430:	1f 92       	push	r1
    1432:	0f 92       	push	r0
    1434:	0f b6       	in	r0, 0x3f	; 63
    1436:	0f 92       	push	r0
    1438:	11 24       	eor	r1, r1
    143a:	2f 93       	push	r18
    143c:	3f 93       	push	r19
    143e:	4f 93       	push	r20
    1440:	5f 93       	push	r21
    1442:	6f 93       	push	r22
    1444:	7f 93       	push	r23
    1446:	8f 93       	push	r24
    1448:	9f 93       	push	r25
    144a:	af 93       	push	r26
    144c:	bf 93       	push	r27
    144e:	ef 93       	push	r30
    1450:	ff 93       	push	r31
    1452:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    1456:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    145a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    145e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1462:	c9 01       	movw	r24, r18
    1464:	03 2e       	mov	r0, r19
    1466:	00 0c       	add	r0, r0
    1468:	aa 0b       	sbc	r26, r26
    146a:	bb 0b       	sbc	r27, r27
    146c:	dc 01       	movw	r26, r24
    146e:	99 27       	eor	r25, r25
    1470:	88 27       	eor	r24, r24
    1472:	60 e0       	ldi	r22, 0x00	; 0
    1474:	70 e0       	ldi	r23, 0x00	; 0
    1476:	84 2b       	or	r24, r20
    1478:	95 2b       	or	r25, r21
    147a:	a6 2b       	or	r26, r22
    147c:	b7 2b       	or	r27, r23
    147e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1482:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1486:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    148a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    148e:	b0 9b       	sbis	0x16, 0	; 22
    1490:	1b c0       	rjmp	.+54     	; 0x14c8 <__vector_18+0x98>
    1492:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1496:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    149a:	c9 01       	movw	r24, r18
    149c:	01 96       	adiw	r24, 0x01	; 1
    149e:	09 2e       	mov	r0, r25
    14a0:	00 0c       	add	r0, r0
    14a2:	aa 0b       	sbc	r26, r26
    14a4:	bb 0b       	sbc	r27, r27
    14a6:	dc 01       	movw	r26, r24
    14a8:	99 27       	eor	r25, r25
    14aa:	88 27       	eor	r24, r24
    14ac:	60 e0       	ldi	r22, 0x00	; 0
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	84 2b       	or	r24, r20
    14b2:	95 2b       	or	r25, r21
    14b4:	a6 2b       	or	r26, r22
    14b6:	b7 2b       	or	r27, r23
    14b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    14bc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    14c0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    14c4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    14c8:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    14cc:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    14d0:	30 97       	sbiw	r30, 0x00	; 0
    14d2:	39 f0       	breq	.+14     	; 0x14e2 <__vector_18+0xb2>
    14d4:	6d e0       	ldi	r22, 0x0D	; 13
    14d6:	70 e0       	ldi	r23, 0x00	; 0
    14d8:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    14dc:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    14e0:	09 95       	icall
    14e2:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    14e6:	ff 91       	pop	r31
    14e8:	ef 91       	pop	r30
    14ea:	bf 91       	pop	r27
    14ec:	af 91       	pop	r26
    14ee:	9f 91       	pop	r25
    14f0:	8f 91       	pop	r24
    14f2:	7f 91       	pop	r23
    14f4:	6f 91       	pop	r22
    14f6:	5f 91       	pop	r21
    14f8:	4f 91       	pop	r20
    14fa:	3f 91       	pop	r19
    14fc:	2f 91       	pop	r18
    14fe:	0f 90       	pop	r0
    1500:	0f be       	out	0x3f, r0	; 63
    1502:	0f 90       	pop	r0
    1504:	1f 90       	pop	r1
    1506:	18 95       	reti

00001508 <__vector_19>:
    1508:	1f 92       	push	r1
    150a:	0f 92       	push	r0
    150c:	0f b6       	in	r0, 0x3f	; 63
    150e:	0f 92       	push	r0
    1510:	11 24       	eor	r1, r1
    1512:	2f 93       	push	r18
    1514:	3f 93       	push	r19
    1516:	4f 93       	push	r20
    1518:	5f 93       	push	r21
    151a:	6f 93       	push	r22
    151c:	7f 93       	push	r23
    151e:	8f 93       	push	r24
    1520:	9f 93       	push	r25
    1522:	af 93       	push	r26
    1524:	bf 93       	push	r27
    1526:	ef 93       	push	r30
    1528:	ff 93       	push	r31
    152a:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    152e:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1532:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1536:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    153a:	c9 01       	movw	r24, r18
    153c:	03 2e       	mov	r0, r19
    153e:	00 0c       	add	r0, r0
    1540:	aa 0b       	sbc	r26, r26
    1542:	bb 0b       	sbc	r27, r27
    1544:	dc 01       	movw	r26, r24
    1546:	99 27       	eor	r25, r25
    1548:	88 27       	eor	r24, r24
    154a:	60 e0       	ldi	r22, 0x00	; 0
    154c:	70 e0       	ldi	r23, 0x00	; 0
    154e:	84 2b       	or	r24, r20
    1550:	95 2b       	or	r25, r21
    1552:	a6 2b       	or	r26, r22
    1554:	b7 2b       	or	r27, r23
    1556:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    155a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    155e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1562:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1566:	b0 9b       	sbis	0x16, 0	; 22
    1568:	1b c0       	rjmp	.+54     	; 0x15a0 <__vector_19+0x98>
    156a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    156e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1572:	c9 01       	movw	r24, r18
    1574:	01 96       	adiw	r24, 0x01	; 1
    1576:	09 2e       	mov	r0, r25
    1578:	00 0c       	add	r0, r0
    157a:	aa 0b       	sbc	r26, r26
    157c:	bb 0b       	sbc	r27, r27
    157e:	dc 01       	movw	r26, r24
    1580:	99 27       	eor	r25, r25
    1582:	88 27       	eor	r24, r24
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	70 e0       	ldi	r23, 0x00	; 0
    1588:	84 2b       	or	r24, r20
    158a:	95 2b       	or	r25, r21
    158c:	a6 2b       	or	r26, r22
    158e:	b7 2b       	or	r27, r23
    1590:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1594:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1598:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    159c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    15a0:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    15a4:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    15a8:	30 97       	sbiw	r30, 0x00	; 0
    15aa:	39 f0       	breq	.+14     	; 0x15ba <__vector_19+0xb2>
    15ac:	6e e0       	ldi	r22, 0x0E	; 14
    15ae:	70 e0       	ldi	r23, 0x00	; 0
    15b0:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    15b4:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    15b8:	09 95       	icall
    15ba:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    15be:	ff 91       	pop	r31
    15c0:	ef 91       	pop	r30
    15c2:	bf 91       	pop	r27
    15c4:	af 91       	pop	r26
    15c6:	9f 91       	pop	r25
    15c8:	8f 91       	pop	r24
    15ca:	7f 91       	pop	r23
    15cc:	6f 91       	pop	r22
    15ce:	5f 91       	pop	r21
    15d0:	4f 91       	pop	r20
    15d2:	3f 91       	pop	r19
    15d4:	2f 91       	pop	r18
    15d6:	0f 90       	pop	r0
    15d8:	0f be       	out	0x3f, r0	; 63
    15da:	0f 90       	pop	r0
    15dc:	1f 90       	pop	r1
    15de:	18 95       	reti

000015e0 <__vector_20>:
    15e0:	1f 92       	push	r1
    15e2:	0f 92       	push	r0
    15e4:	0f b6       	in	r0, 0x3f	; 63
    15e6:	0f 92       	push	r0
    15e8:	11 24       	eor	r1, r1
    15ea:	2f 93       	push	r18
    15ec:	3f 93       	push	r19
    15ee:	4f 93       	push	r20
    15f0:	5f 93       	push	r21
    15f2:	6f 93       	push	r22
    15f4:	7f 93       	push	r23
    15f6:	8f 93       	push	r24
    15f8:	9f 93       	push	r25
    15fa:	af 93       	push	r26
    15fc:	bf 93       	push	r27
    15fe:	ef 93       	push	r30
    1600:	ff 93       	push	r31
    1602:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    1606:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    160a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    160e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1612:	c9 01       	movw	r24, r18
    1614:	03 2e       	mov	r0, r19
    1616:	00 0c       	add	r0, r0
    1618:	aa 0b       	sbc	r26, r26
    161a:	bb 0b       	sbc	r27, r27
    161c:	dc 01       	movw	r26, r24
    161e:	99 27       	eor	r25, r25
    1620:	88 27       	eor	r24, r24
    1622:	60 e0       	ldi	r22, 0x00	; 0
    1624:	70 e0       	ldi	r23, 0x00	; 0
    1626:	84 2b       	or	r24, r20
    1628:	95 2b       	or	r25, r21
    162a:	a6 2b       	or	r26, r22
    162c:	b7 2b       	or	r27, r23
    162e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1632:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1636:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    163a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    163e:	b0 9b       	sbis	0x16, 0	; 22
    1640:	1b c0       	rjmp	.+54     	; 0x1678 <__vector_20+0x98>
    1642:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1646:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    164a:	c9 01       	movw	r24, r18
    164c:	01 96       	adiw	r24, 0x01	; 1
    164e:	09 2e       	mov	r0, r25
    1650:	00 0c       	add	r0, r0
    1652:	aa 0b       	sbc	r26, r26
    1654:	bb 0b       	sbc	r27, r27
    1656:	dc 01       	movw	r26, r24
    1658:	99 27       	eor	r25, r25
    165a:	88 27       	eor	r24, r24
    165c:	60 e0       	ldi	r22, 0x00	; 0
    165e:	70 e0       	ldi	r23, 0x00	; 0
    1660:	84 2b       	or	r24, r20
    1662:	95 2b       	or	r25, r21
    1664:	a6 2b       	or	r26, r22
    1666:	b7 2b       	or	r27, r23
    1668:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    166c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1670:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1674:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1678:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    167c:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    1680:	30 97       	sbiw	r30, 0x00	; 0
    1682:	39 f0       	breq	.+14     	; 0x1692 <__vector_20+0xb2>
    1684:	6f e0       	ldi	r22, 0x0F	; 15
    1686:	70 e0       	ldi	r23, 0x00	; 0
    1688:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    168c:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    1690:	09 95       	icall
    1692:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    1696:	ff 91       	pop	r31
    1698:	ef 91       	pop	r30
    169a:	bf 91       	pop	r27
    169c:	af 91       	pop	r26
    169e:	9f 91       	pop	r25
    16a0:	8f 91       	pop	r24
    16a2:	7f 91       	pop	r23
    16a4:	6f 91       	pop	r22
    16a6:	5f 91       	pop	r21
    16a8:	4f 91       	pop	r20
    16aa:	3f 91       	pop	r19
    16ac:	2f 91       	pop	r18
    16ae:	0f 90       	pop	r0
    16b0:	0f be       	out	0x3f, r0	; 63
    16b2:	0f 90       	pop	r0
    16b4:	1f 90       	pop	r1
    16b6:	18 95       	reti

000016b8 <__vector_21>:
    16b8:	1f 92       	push	r1
    16ba:	0f 92       	push	r0
    16bc:	0f b6       	in	r0, 0x3f	; 63
    16be:	0f 92       	push	r0
    16c0:	11 24       	eor	r1, r1
    16c2:	2f 93       	push	r18
    16c4:	3f 93       	push	r19
    16c6:	4f 93       	push	r20
    16c8:	5f 93       	push	r21
    16ca:	6f 93       	push	r22
    16cc:	7f 93       	push	r23
    16ce:	8f 93       	push	r24
    16d0:	9f 93       	push	r25
    16d2:	af 93       	push	r26
    16d4:	bf 93       	push	r27
    16d6:	ef 93       	push	r30
    16d8:	ff 93       	push	r31
    16da:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    16de:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    16e2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16e6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ea:	c9 01       	movw	r24, r18
    16ec:	03 2e       	mov	r0, r19
    16ee:	00 0c       	add	r0, r0
    16f0:	aa 0b       	sbc	r26, r26
    16f2:	bb 0b       	sbc	r27, r27
    16f4:	dc 01       	movw	r26, r24
    16f6:	99 27       	eor	r25, r25
    16f8:	88 27       	eor	r24, r24
    16fa:	60 e0       	ldi	r22, 0x00	; 0
    16fc:	70 e0       	ldi	r23, 0x00	; 0
    16fe:	84 2b       	or	r24, r20
    1700:	95 2b       	or	r25, r21
    1702:	a6 2b       	or	r26, r22
    1704:	b7 2b       	or	r27, r23
    1706:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    170a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    170e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1712:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1716:	b0 9b       	sbis	0x16, 0	; 22
    1718:	1b c0       	rjmp	.+54     	; 0x1750 <__vector_21+0x98>
    171a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    171e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1722:	c9 01       	movw	r24, r18
    1724:	01 96       	adiw	r24, 0x01	; 1
    1726:	09 2e       	mov	r0, r25
    1728:	00 0c       	add	r0, r0
    172a:	aa 0b       	sbc	r26, r26
    172c:	bb 0b       	sbc	r27, r27
    172e:	dc 01       	movw	r26, r24
    1730:	99 27       	eor	r25, r25
    1732:	88 27       	eor	r24, r24
    1734:	60 e0       	ldi	r22, 0x00	; 0
    1736:	70 e0       	ldi	r23, 0x00	; 0
    1738:	84 2b       	or	r24, r20
    173a:	95 2b       	or	r25, r21
    173c:	a6 2b       	or	r26, r22
    173e:	b7 2b       	or	r27, r23
    1740:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1744:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1748:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    174c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1750:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    1754:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    1758:	30 97       	sbiw	r30, 0x00	; 0
    175a:	39 f0       	breq	.+14     	; 0x176a <__vector_21+0xb2>
    175c:	60 e1       	ldi	r22, 0x10	; 16
    175e:	70 e0       	ldi	r23, 0x00	; 0
    1760:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    1764:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    1768:	09 95       	icall
    176a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    176e:	ff 91       	pop	r31
    1770:	ef 91       	pop	r30
    1772:	bf 91       	pop	r27
    1774:	af 91       	pop	r26
    1776:	9f 91       	pop	r25
    1778:	8f 91       	pop	r24
    177a:	7f 91       	pop	r23
    177c:	6f 91       	pop	r22
    177e:	5f 91       	pop	r21
    1780:	4f 91       	pop	r20
    1782:	3f 91       	pop	r19
    1784:	2f 91       	pop	r18
    1786:	0f 90       	pop	r0
    1788:	0f be       	out	0x3f, r0	; 63
    178a:	0f 90       	pop	r0
    178c:	1f 90       	pop	r1
    178e:	18 95       	reti

00001790 <__vector_22>:
    1790:	1f 92       	push	r1
    1792:	0f 92       	push	r0
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	0f 92       	push	r0
    1798:	11 24       	eor	r1, r1
    179a:	2f 93       	push	r18
    179c:	3f 93       	push	r19
    179e:	4f 93       	push	r20
    17a0:	5f 93       	push	r21
    17a2:	6f 93       	push	r22
    17a4:	7f 93       	push	r23
    17a6:	8f 93       	push	r24
    17a8:	9f 93       	push	r25
    17aa:	af 93       	push	r26
    17ac:	bf 93       	push	r27
    17ae:	ef 93       	push	r30
    17b0:	ff 93       	push	r31
    17b2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    17b6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    17ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17c2:	c9 01       	movw	r24, r18
    17c4:	03 2e       	mov	r0, r19
    17c6:	00 0c       	add	r0, r0
    17c8:	aa 0b       	sbc	r26, r26
    17ca:	bb 0b       	sbc	r27, r27
    17cc:	dc 01       	movw	r26, r24
    17ce:	99 27       	eor	r25, r25
    17d0:	88 27       	eor	r24, r24
    17d2:	60 e0       	ldi	r22, 0x00	; 0
    17d4:	70 e0       	ldi	r23, 0x00	; 0
    17d6:	84 2b       	or	r24, r20
    17d8:	95 2b       	or	r25, r21
    17da:	a6 2b       	or	r26, r22
    17dc:	b7 2b       	or	r27, r23
    17de:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    17e2:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    17e6:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17ea:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17ee:	b0 9b       	sbis	0x16, 0	; 22
    17f0:	1b c0       	rjmp	.+54     	; 0x1828 <__vector_22+0x98>
    17f2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17f6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17fa:	c9 01       	movw	r24, r18
    17fc:	01 96       	adiw	r24, 0x01	; 1
    17fe:	09 2e       	mov	r0, r25
    1800:	00 0c       	add	r0, r0
    1802:	aa 0b       	sbc	r26, r26
    1804:	bb 0b       	sbc	r27, r27
    1806:	dc 01       	movw	r26, r24
    1808:	99 27       	eor	r25, r25
    180a:	88 27       	eor	r24, r24
    180c:	60 e0       	ldi	r22, 0x00	; 0
    180e:	70 e0       	ldi	r23, 0x00	; 0
    1810:	84 2b       	or	r24, r20
    1812:	95 2b       	or	r25, r21
    1814:	a6 2b       	or	r26, r22
    1816:	b7 2b       	or	r27, r23
    1818:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    181c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1820:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1824:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1828:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    182c:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    1830:	30 97       	sbiw	r30, 0x00	; 0
    1832:	39 f0       	breq	.+14     	; 0x1842 <__vector_22+0xb2>
    1834:	61 e1       	ldi	r22, 0x11	; 17
    1836:	70 e0       	ldi	r23, 0x00	; 0
    1838:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    183c:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    1840:	09 95       	icall
    1842:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    1846:	ff 91       	pop	r31
    1848:	ef 91       	pop	r30
    184a:	bf 91       	pop	r27
    184c:	af 91       	pop	r26
    184e:	9f 91       	pop	r25
    1850:	8f 91       	pop	r24
    1852:	7f 91       	pop	r23
    1854:	6f 91       	pop	r22
    1856:	5f 91       	pop	r21
    1858:	4f 91       	pop	r20
    185a:	3f 91       	pop	r19
    185c:	2f 91       	pop	r18
    185e:	0f 90       	pop	r0
    1860:	0f be       	out	0x3f, r0	; 63
    1862:	0f 90       	pop	r0
    1864:	1f 90       	pop	r1
    1866:	18 95       	reti

00001868 <enqueueByDeadline>:
    1868:	ef 92       	push	r14
    186a:	ff 92       	push	r15
    186c:	0f 93       	push	r16
    186e:	1f 93       	push	r17
    1870:	cf 93       	push	r28
    1872:	df 93       	push	r29
    1874:	7b 01       	movw	r14, r22
    1876:	eb 01       	movw	r28, r22
    1878:	a8 81       	ld	r26, Y
    187a:	b9 81       	ldd	r27, Y+1	; 0x01
    187c:	10 97       	sbiw	r26, 0x00	; 0
    187e:	61 f1       	breq	.+88     	; 0x18d8 <enqueueByDeadline+0x70>
    1880:	fc 01       	movw	r30, r24
    1882:	06 81       	ldd	r16, Z+6	; 0x06
    1884:	17 81       	ldd	r17, Z+7	; 0x07
    1886:	20 85       	ldd	r18, Z+8	; 0x08
    1888:	31 85       	ldd	r19, Z+9	; 0x09
    188a:	16 96       	adiw	r26, 0x06	; 6
    188c:	4d 91       	ld	r20, X+
    188e:	5d 91       	ld	r21, X+
    1890:	6d 91       	ld	r22, X+
    1892:	7c 91       	ld	r23, X
    1894:	19 97       	sbiw	r26, 0x09	; 9
    1896:	04 17       	cp	r16, r20
    1898:	15 07       	cpc	r17, r21
    189a:	26 07       	cpc	r18, r22
    189c:	37 07       	cpc	r19, r23
    189e:	14 f4       	brge	.+4      	; 0x18a4 <enqueueByDeadline+0x3c>
    18a0:	1b c0       	rjmp	.+54     	; 0x18d8 <enqueueByDeadline+0x70>
    18a2:	df 01       	movw	r26, r30
    18a4:	ed 91       	ld	r30, X+
    18a6:	fc 91       	ld	r31, X
    18a8:	11 97       	sbiw	r26, 0x01	; 1
    18aa:	30 97       	sbiw	r30, 0x00	; 0
    18ac:	49 f0       	breq	.+18     	; 0x18c0 <enqueueByDeadline+0x58>
    18ae:	46 81       	ldd	r20, Z+6	; 0x06
    18b0:	57 81       	ldd	r21, Z+7	; 0x07
    18b2:	60 85       	ldd	r22, Z+8	; 0x08
    18b4:	71 85       	ldd	r23, Z+9	; 0x09
    18b6:	04 17       	cp	r16, r20
    18b8:	15 07       	cpc	r17, r21
    18ba:	26 07       	cpc	r18, r22
    18bc:	37 07       	cpc	r19, r23
    18be:	8c f7       	brge	.-30     	; 0x18a2 <enqueueByDeadline+0x3a>
    18c0:	ec 01       	movw	r28, r24
    18c2:	f9 83       	std	Y+1, r31	; 0x01
    18c4:	e8 83       	st	Y, r30
    18c6:	10 97       	sbiw	r26, 0x00	; 0
    18c8:	21 f4       	brne	.+8      	; 0x18d2 <enqueueByDeadline+0x6a>
    18ca:	f7 01       	movw	r30, r14
    18cc:	91 83       	std	Z+1, r25	; 0x01
    18ce:	80 83       	st	Z, r24
    18d0:	07 c0       	rjmp	.+14     	; 0x18e0 <enqueueByDeadline+0x78>
    18d2:	8d 93       	st	X+, r24
    18d4:	9c 93       	st	X, r25
    18d6:	04 c0       	rjmp	.+8      	; 0x18e0 <enqueueByDeadline+0x78>
    18d8:	ec 01       	movw	r28, r24
    18da:	b9 83       	std	Y+1, r27	; 0x01
    18dc:	a8 83       	st	Y, r26
    18de:	f5 cf       	rjmp	.-22     	; 0x18ca <enqueueByDeadline+0x62>
    18e0:	df 91       	pop	r29
    18e2:	cf 91       	pop	r28
    18e4:	1f 91       	pop	r17
    18e6:	0f 91       	pop	r16
    18e8:	ff 90       	pop	r15
    18ea:	ef 90       	pop	r14
    18ec:	08 95       	ret

000018ee <enqueueByBaseline>:
    18ee:	ef 92       	push	r14
    18f0:	ff 92       	push	r15
    18f2:	0f 93       	push	r16
    18f4:	1f 93       	push	r17
    18f6:	cf 93       	push	r28
    18f8:	df 93       	push	r29
    18fa:	7b 01       	movw	r14, r22
    18fc:	eb 01       	movw	r28, r22
    18fe:	a8 81       	ld	r26, Y
    1900:	b9 81       	ldd	r27, Y+1	; 0x01
    1902:	10 97       	sbiw	r26, 0x00	; 0
    1904:	61 f1       	breq	.+88     	; 0x195e <enqueueByBaseline+0x70>
    1906:	fc 01       	movw	r30, r24
    1908:	02 81       	ldd	r16, Z+2	; 0x02
    190a:	13 81       	ldd	r17, Z+3	; 0x03
    190c:	24 81       	ldd	r18, Z+4	; 0x04
    190e:	35 81       	ldd	r19, Z+5	; 0x05
    1910:	12 96       	adiw	r26, 0x02	; 2
    1912:	4d 91       	ld	r20, X+
    1914:	5d 91       	ld	r21, X+
    1916:	6d 91       	ld	r22, X+
    1918:	7c 91       	ld	r23, X
    191a:	15 97       	sbiw	r26, 0x05	; 5
    191c:	04 17       	cp	r16, r20
    191e:	15 07       	cpc	r17, r21
    1920:	26 07       	cpc	r18, r22
    1922:	37 07       	cpc	r19, r23
    1924:	14 f4       	brge	.+4      	; 0x192a <enqueueByBaseline+0x3c>
    1926:	1b c0       	rjmp	.+54     	; 0x195e <enqueueByBaseline+0x70>
    1928:	df 01       	movw	r26, r30
    192a:	ed 91       	ld	r30, X+
    192c:	fc 91       	ld	r31, X
    192e:	11 97       	sbiw	r26, 0x01	; 1
    1930:	30 97       	sbiw	r30, 0x00	; 0
    1932:	49 f0       	breq	.+18     	; 0x1946 <enqueueByBaseline+0x58>
    1934:	42 81       	ldd	r20, Z+2	; 0x02
    1936:	53 81       	ldd	r21, Z+3	; 0x03
    1938:	64 81       	ldd	r22, Z+4	; 0x04
    193a:	75 81       	ldd	r23, Z+5	; 0x05
    193c:	04 17       	cp	r16, r20
    193e:	15 07       	cpc	r17, r21
    1940:	26 07       	cpc	r18, r22
    1942:	37 07       	cpc	r19, r23
    1944:	8c f7       	brge	.-30     	; 0x1928 <enqueueByBaseline+0x3a>
    1946:	ec 01       	movw	r28, r24
    1948:	f9 83       	std	Y+1, r31	; 0x01
    194a:	e8 83       	st	Y, r30
    194c:	10 97       	sbiw	r26, 0x00	; 0
    194e:	21 f4       	brne	.+8      	; 0x1958 <enqueueByBaseline+0x6a>
    1950:	f7 01       	movw	r30, r14
    1952:	91 83       	std	Z+1, r25	; 0x01
    1954:	80 83       	st	Z, r24
    1956:	07 c0       	rjmp	.+14     	; 0x1966 <enqueueByBaseline+0x78>
    1958:	8d 93       	st	X+, r24
    195a:	9c 93       	st	X, r25
    195c:	04 c0       	rjmp	.+8      	; 0x1966 <enqueueByBaseline+0x78>
    195e:	ec 01       	movw	r28, r24
    1960:	b9 83       	std	Y+1, r27	; 0x01
    1962:	a8 83       	st	Y, r26
    1964:	f5 cf       	rjmp	.-22     	; 0x1950 <enqueueByBaseline+0x62>
    1966:	df 91       	pop	r29
    1968:	cf 91       	pop	r28
    196a:	1f 91       	pop	r17
    196c:	0f 91       	pop	r16
    196e:	ff 90       	pop	r15
    1970:	ef 90       	pop	r14
    1972:	08 95       	ret

00001974 <dequeue>:
    1974:	dc 01       	movw	r26, r24
    1976:	ed 91       	ld	r30, X+
    1978:	fc 91       	ld	r31, X
    197a:	11 97       	sbiw	r26, 0x01	; 1
    197c:	30 97       	sbiw	r30, 0x00	; 0
    197e:	59 f4       	brne	.+22     	; 0x1996 <dequeue+0x22>
    1980:	8f ef       	ldi	r24, 0xFF	; 255
    1982:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    1986:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    198a:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	83 bf       	out	0x33, r24	; 51
    1992:	88 95       	sleep
    1994:	fd cf       	rjmp	.-6      	; 0x1990 <dequeue+0x1c>
    1996:	20 81       	ld	r18, Z
    1998:	31 81       	ldd	r19, Z+1	; 0x01
    199a:	2d 93       	st	X+, r18
    199c:	3c 93       	st	X, r19
    199e:	cf 01       	movw	r24, r30
    19a0:	08 95       	ret

000019a2 <__vector_9>:
    19a2:	1f 92       	push	r1
    19a4:	0f 92       	push	r0
    19a6:	0f b6       	in	r0, 0x3f	; 63
    19a8:	0f 92       	push	r0
    19aa:	11 24       	eor	r1, r1
    19ac:	2f 93       	push	r18
    19ae:	3f 93       	push	r19
    19b0:	4f 93       	push	r20
    19b2:	5f 93       	push	r21
    19b4:	6f 93       	push	r22
    19b6:	7f 93       	push	r23
    19b8:	8f 93       	push	r24
    19ba:	9f 93       	push	r25
    19bc:	ef 93       	push	r30
    19be:	ff 93       	push	r31
    19c0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    19c4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    19c8:	01 96       	adiw	r24, 0x01	; 1
    19ca:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <overflows+0x1>
    19ce:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <overflows>
    19d2:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    19d6:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    19da:	30 97       	sbiw	r30, 0x00	; 0
    19dc:	01 f1       	breq	.+64     	; 0x1a1e <__vector_9+0x7c>
    19de:	42 81       	ldd	r20, Z+2	; 0x02
    19e0:	53 81       	ldd	r21, Z+3	; 0x03
    19e2:	64 81       	ldd	r22, Z+4	; 0x04
    19e4:	75 81       	ldd	r23, Z+5	; 0x05
    19e6:	86 17       	cp	r24, r22
    19e8:	97 07       	cpc	r25, r23
    19ea:	c9 f4       	brne	.+50     	; 0x1a1e <__vector_9+0x7c>
    19ec:	ca 01       	movw	r24, r20
    19ee:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19f2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f6:	42 1b       	sub	r20, r18
    19f8:	53 0b       	sbc	r21, r19
    19fa:	41 30       	cpi	r20, 0x01	; 1
    19fc:	51 05       	cpc	r21, r1
    19fe:	29 f4       	brne	.+10     	; 0x1a0a <__vector_9+0x68>
    1a00:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a04:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a08:	01 96       	adiw	r24, 0x01	; 1
    1a0a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a0e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a12:	ef e6       	ldi	r30, 0x6F	; 111
    1a14:	f0 e0       	ldi	r31, 0x00	; 0
    1a16:	80 81       	ld	r24, Z
    1a18:	82 60       	ori	r24, 0x02	; 2
    1a1a:	80 83       	st	Z, r24
    1a1c:	05 c0       	rjmp	.+10     	; 0x1a28 <__vector_9+0x86>
    1a1e:	ef e6       	ldi	r30, 0x6F	; 111
    1a20:	f0 e0       	ldi	r31, 0x00	; 0
    1a22:	80 81       	ld	r24, Z
    1a24:	8d 7f       	andi	r24, 0xFD	; 253
    1a26:	80 83       	st	Z, r24
    1a28:	ff 91       	pop	r31
    1a2a:	ef 91       	pop	r30
    1a2c:	9f 91       	pop	r25
    1a2e:	8f 91       	pop	r24
    1a30:	7f 91       	pop	r23
    1a32:	6f 91       	pop	r22
    1a34:	5f 91       	pop	r21
    1a36:	4f 91       	pop	r20
    1a38:	3f 91       	pop	r19
    1a3a:	2f 91       	pop	r18
    1a3c:	0f 90       	pop	r0
    1a3e:	0f be       	out	0x3f, r0	; 63
    1a40:	0f 90       	pop	r0
    1a42:	1f 90       	pop	r1
    1a44:	18 95       	reti

00001a46 <__vector_7>:
    1a46:	1f 92       	push	r1
    1a48:	0f 92       	push	r0
    1a4a:	0f b6       	in	r0, 0x3f	; 63
    1a4c:	0f 92       	push	r0
    1a4e:	11 24       	eor	r1, r1
    1a50:	cf 92       	push	r12
    1a52:	df 92       	push	r13
    1a54:	ef 92       	push	r14
    1a56:	ff 92       	push	r15
    1a58:	2f 93       	push	r18
    1a5a:	3f 93       	push	r19
    1a5c:	4f 93       	push	r20
    1a5e:	5f 93       	push	r21
    1a60:	6f 93       	push	r22
    1a62:	7f 93       	push	r23
    1a64:	8f 93       	push	r24
    1a66:	9f 93       	push	r25
    1a68:	af 93       	push	r26
    1a6a:	bf 93       	push	r27
    1a6c:	ef 93       	push	r30
    1a6e:	ff 93       	push	r31
    1a70:	c0 90 50 01 	lds	r12, 0x0150	; 0x800150 <overflows>
    1a74:	d0 90 51 01 	lds	r13, 0x0151	; 0x800151 <overflows+0x1>
    1a78:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a7c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a80:	b0 99       	sbic	0x16, 0	; 22
    1a82:	0f c0       	rjmp	.+30     	; 0x1aa2 <__vector_7+0x5c>
    1a84:	0d 2c       	mov	r0, r13
    1a86:	00 0c       	add	r0, r0
    1a88:	ee 08       	sbc	r14, r14
    1a8a:	ff 08       	sbc	r15, r15
    1a8c:	d6 01       	movw	r26, r12
    1a8e:	99 27       	eor	r25, r25
    1a90:	88 27       	eor	r24, r24
    1a92:	69 01       	movw	r12, r18
    1a94:	e1 2c       	mov	r14, r1
    1a96:	f1 2c       	mov	r15, r1
    1a98:	c8 2a       	or	r12, r24
    1a9a:	d9 2a       	or	r13, r25
    1a9c:	ea 2a       	or	r14, r26
    1a9e:	fb 2a       	or	r15, r27
    1aa0:	15 c0       	rjmp	.+42     	; 0x1acc <__vector_7+0x86>
    1aa2:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1aa6:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aaa:	8f ef       	ldi	r24, 0xFF	; 255
    1aac:	c8 1a       	sub	r12, r24
    1aae:	d8 0a       	sbc	r13, r24
    1ab0:	0d 2c       	mov	r0, r13
    1ab2:	00 0c       	add	r0, r0
    1ab4:	ee 08       	sbc	r14, r14
    1ab6:	ff 08       	sbc	r15, r15
    1ab8:	d6 01       	movw	r26, r12
    1aba:	99 27       	eor	r25, r25
    1abc:	88 27       	eor	r24, r24
    1abe:	69 01       	movw	r12, r18
    1ac0:	e1 2c       	mov	r14, r1
    1ac2:	f1 2c       	mov	r15, r1
    1ac4:	c8 2a       	or	r12, r24
    1ac6:	d9 2a       	or	r13, r25
    1ac8:	ea 2a       	or	r14, r26
    1aca:	fb 2a       	or	r15, r27
    1acc:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1ad0:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1ad4:	30 97       	sbiw	r30, 0x00	; 0
    1ad6:	09 f4       	brne	.+2      	; 0x1ada <__vector_7+0x94>
    1ad8:	42 c0       	rjmp	.+132    	; 0x1b5e <__vector_7+0x118>
    1ada:	82 81       	ldd	r24, Z+2	; 0x02
    1adc:	93 81       	ldd	r25, Z+3	; 0x03
    1ade:	a4 81       	ldd	r26, Z+4	; 0x04
    1ae0:	b5 81       	ldd	r27, Z+5	; 0x05
    1ae2:	8c 19       	sub	r24, r12
    1ae4:	9d 09       	sbc	r25, r13
    1ae6:	ae 09       	sbc	r26, r14
    1ae8:	bf 09       	sbc	r27, r15
    1aea:	18 16       	cp	r1, r24
    1aec:	19 06       	cpc	r1, r25
    1aee:	1a 06       	cpc	r1, r26
    1af0:	1b 06       	cpc	r1, r27
    1af2:	ec f1       	brlt	.+122    	; 0x1b6e <__vector_7+0x128>
    1af4:	86 e5       	ldi	r24, 0x56	; 86
    1af6:	91 e0       	ldi	r25, 0x01	; 1
    1af8:	0e 94 ba 0c 	call	0x1974	; 0x1974 <dequeue>
    1afc:	68 e5       	ldi	r22, 0x58	; 88
    1afe:	71 e0       	ldi	r23, 0x01	; 1
    1b00:	0e 94 34 0c 	call	0x1868	; 0x1868 <enqueueByDeadline>
    1b04:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1b08:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1b0c:	30 97       	sbiw	r30, 0x00	; 0
    1b0e:	39 f1       	breq	.+78     	; 0x1b5e <__vector_7+0x118>
    1b10:	82 81       	ldd	r24, Z+2	; 0x02
    1b12:	93 81       	ldd	r25, Z+3	; 0x03
    1b14:	a4 81       	ldd	r26, Z+4	; 0x04
    1b16:	b5 81       	ldd	r27, Z+5	; 0x05
    1b18:	8c 19       	sub	r24, r12
    1b1a:	9d 09       	sbc	r25, r13
    1b1c:	ae 09       	sbc	r26, r14
    1b1e:	bf 09       	sbc	r27, r15
    1b20:	18 16       	cp	r1, r24
    1b22:	19 06       	cpc	r1, r25
    1b24:	1a 06       	cpc	r1, r26
    1b26:	1b 06       	cpc	r1, r27
    1b28:	2c f7       	brge	.-54     	; 0x1af4 <__vector_7+0xae>
    1b2a:	21 c0       	rjmp	.+66     	; 0x1b6e <__vector_7+0x128>
    1b2c:	9c 01       	movw	r18, r24
    1b2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b36:	84 1b       	sub	r24, r20
    1b38:	95 0b       	sbc	r25, r21
    1b3a:	01 97       	sbiw	r24, 0x01	; 1
    1b3c:	31 f4       	brne	.+12     	; 0x1b4a <__vector_7+0x104>
    1b3e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b42:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b46:	2f 5f       	subi	r18, 0xFF	; 255
    1b48:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1b4e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1b52:	ef e6       	ldi	r30, 0x6F	; 111
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	80 81       	ld	r24, Z
    1b58:	82 60       	ori	r24, 0x02	; 2
    1b5a:	80 83       	st	Z, r24
    1b5c:	05 c0       	rjmp	.+10     	; 0x1b68 <__vector_7+0x122>
    1b5e:	ef e6       	ldi	r30, 0x6F	; 111
    1b60:	f0 e0       	ldi	r31, 0x00	; 0
    1b62:	80 81       	ld	r24, Z
    1b64:	8d 7f       	andi	r24, 0xFD	; 253
    1b66:	80 83       	st	Z, r24
    1b68:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    1b6c:	0c c0       	rjmp	.+24     	; 0x1b86 <__vector_7+0x140>
    1b6e:	82 81       	ldd	r24, Z+2	; 0x02
    1b70:	93 81       	ldd	r25, Z+3	; 0x03
    1b72:	a4 81       	ldd	r26, Z+4	; 0x04
    1b74:	b5 81       	ldd	r27, Z+5	; 0x05
    1b76:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    1b7a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1b7e:	2a 17       	cp	r18, r26
    1b80:	3b 07       	cpc	r19, r27
    1b82:	69 f7       	brne	.-38     	; 0x1b5e <__vector_7+0x118>
    1b84:	d3 cf       	rjmp	.-90     	; 0x1b2c <__vector_7+0xe6>
    1b86:	ff 91       	pop	r31
    1b88:	ef 91       	pop	r30
    1b8a:	bf 91       	pop	r27
    1b8c:	af 91       	pop	r26
    1b8e:	9f 91       	pop	r25
    1b90:	8f 91       	pop	r24
    1b92:	7f 91       	pop	r23
    1b94:	6f 91       	pop	r22
    1b96:	5f 91       	pop	r21
    1b98:	4f 91       	pop	r20
    1b9a:	3f 91       	pop	r19
    1b9c:	2f 91       	pop	r18
    1b9e:	ff 90       	pop	r15
    1ba0:	ef 90       	pop	r14
    1ba2:	df 90       	pop	r13
    1ba4:	cf 90       	pop	r12
    1ba6:	0f 90       	pop	r0
    1ba8:	0f be       	out	0x3f, r0	; 63
    1baa:	0f 90       	pop	r0
    1bac:	1f 90       	pop	r1
    1bae:	18 95       	reti

00001bb0 <async>:
    1bb0:	3f 92       	push	r3
    1bb2:	4f 92       	push	r4
    1bb4:	5f 92       	push	r5
    1bb6:	6f 92       	push	r6
    1bb8:	7f 92       	push	r7
    1bba:	8f 92       	push	r8
    1bbc:	9f 92       	push	r9
    1bbe:	af 92       	push	r10
    1bc0:	bf 92       	push	r11
    1bc2:	cf 92       	push	r12
    1bc4:	df 92       	push	r13
    1bc6:	ef 92       	push	r14
    1bc8:	ff 92       	push	r15
    1bca:	0f 93       	push	r16
    1bcc:	1f 93       	push	r17
    1bce:	cf 93       	push	r28
    1bd0:	df 93       	push	r29
    1bd2:	2b 01       	movw	r4, r22
    1bd4:	3c 01       	movw	r6, r24
    1bd6:	49 01       	movw	r8, r18
    1bd8:	5a 01       	movw	r10, r20
    1bda:	8f b7       	in	r24, 0x3f	; 63
    1bdc:	80 78       	andi	r24, 0x80	; 128
    1bde:	38 2e       	mov	r3, r24
    1be0:	f8 94       	cli
    1be2:	89 e4       	ldi	r24, 0x49	; 73
    1be4:	91 e0       	ldi	r25, 0x01	; 1
    1be6:	0e 94 ba 0c 	call	0x1974	; 0x1974 <dequeue>
    1bea:	ec 01       	movw	r28, r24
    1bec:	1b 87       	std	Y+11, r17	; 0x0b
    1bee:	0a 87       	std	Y+10, r16	; 0x0a
    1bf0:	fd 86       	std	Y+13, r15	; 0x0d
    1bf2:	ec 86       	std	Y+12, r14	; 0x0c
    1bf4:	df 86       	std	Y+15, r13	; 0x0f
    1bf6:	ce 86       	std	Y+14, r12	; 0x0e
    1bf8:	33 20       	and	r3, r3
    1bfa:	61 f0       	breq	.+24     	; 0x1c14 <async+0x64>
    1bfc:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <current>
    1c00:	f0 91 44 01 	lds	r31, 0x0144	; 0x800144 <current+0x1>
    1c04:	02 80       	ldd	r0, Z+2	; 0x02
    1c06:	f3 81       	ldd	r31, Z+3	; 0x03
    1c08:	e0 2d       	mov	r30, r0
    1c0a:	82 81       	ldd	r24, Z+2	; 0x02
    1c0c:	93 81       	ldd	r25, Z+3	; 0x03
    1c0e:	a4 81       	ldd	r26, Z+4	; 0x04
    1c10:	b5 81       	ldd	r27, Z+5	; 0x05
    1c12:	08 c0       	rjmp	.+16     	; 0x1c24 <async+0x74>
    1c14:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    1c18:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    1c1c:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    1c20:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    1c24:	48 0e       	add	r4, r24
    1c26:	59 1e       	adc	r5, r25
    1c28:	6a 1e       	adc	r6, r26
    1c2a:	7b 1e       	adc	r7, r27
    1c2c:	4a 82       	std	Y+2, r4	; 0x02
    1c2e:	5b 82       	std	Y+3, r5	; 0x03
    1c30:	6c 82       	std	Y+4, r6	; 0x04
    1c32:	7d 82       	std	Y+5, r7	; 0x05
    1c34:	18 14       	cp	r1, r8
    1c36:	19 04       	cpc	r1, r9
    1c38:	1a 04       	cpc	r1, r10
    1c3a:	1b 04       	cpc	r1, r11
    1c3c:	44 f0       	brlt	.+16     	; 0x1c4e <async+0x9e>
    1c3e:	0f 2e       	mov	r0, r31
    1c40:	88 24       	eor	r8, r8
    1c42:	8a 94       	dec	r8
    1c44:	98 2c       	mov	r9, r8
    1c46:	a8 2c       	mov	r10, r8
    1c48:	ff e7       	ldi	r31, 0x7F	; 127
    1c4a:	bf 2e       	mov	r11, r31
    1c4c:	f0 2d       	mov	r31, r0
    1c4e:	84 0c       	add	r8, r4
    1c50:	95 1c       	adc	r9, r5
    1c52:	a6 1c       	adc	r10, r6
    1c54:	b7 1c       	adc	r11, r7
    1c56:	8e 82       	std	Y+6, r8	; 0x06
    1c58:	9f 82       	std	Y+7, r9	; 0x07
    1c5a:	a8 86       	std	Y+8, r10	; 0x08
    1c5c:	b9 86       	std	Y+9, r11	; 0x09
    1c5e:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1c62:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1c66:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c6a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c6e:	b0 99       	sbic	0x16, 0	; 22
    1c70:	0e c0       	rjmp	.+28     	; 0x1c8e <async+0xde>
    1c72:	09 2e       	mov	r0, r25
    1c74:	00 0c       	add	r0, r0
    1c76:	aa 0b       	sbc	r26, r26
    1c78:	bb 0b       	sbc	r27, r27
    1c7a:	dc 01       	movw	r26, r24
    1c7c:	99 27       	eor	r25, r25
    1c7e:	88 27       	eor	r24, r24
    1c80:	60 e0       	ldi	r22, 0x00	; 0
    1c82:	70 e0       	ldi	r23, 0x00	; 0
    1c84:	84 2b       	or	r24, r20
    1c86:	95 2b       	or	r25, r21
    1c88:	a6 2b       	or	r26, r22
    1c8a:	b7 2b       	or	r27, r23
    1c8c:	13 c0       	rjmp	.+38     	; 0x1cb4 <async+0x104>
    1c8e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c92:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c96:	01 96       	adiw	r24, 0x01	; 1
    1c98:	09 2e       	mov	r0, r25
    1c9a:	00 0c       	add	r0, r0
    1c9c:	aa 0b       	sbc	r26, r26
    1c9e:	bb 0b       	sbc	r27, r27
    1ca0:	dc 01       	movw	r26, r24
    1ca2:	99 27       	eor	r25, r25
    1ca4:	88 27       	eor	r24, r24
    1ca6:	a9 01       	movw	r20, r18
    1ca8:	60 e0       	ldi	r22, 0x00	; 0
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	84 2b       	or	r24, r20
    1cae:	95 2b       	or	r25, r21
    1cb0:	a6 2b       	or	r26, r22
    1cb2:	b7 2b       	or	r27, r23
    1cb4:	48 1a       	sub	r4, r24
    1cb6:	59 0a       	sbc	r5, r25
    1cb8:	6a 0a       	sbc	r6, r26
    1cba:	7b 0a       	sbc	r7, r27
    1cbc:	14 14       	cp	r1, r4
    1cbe:	15 04       	cpc	r1, r5
    1cc0:	16 04       	cpc	r1, r6
    1cc2:	17 04       	cpc	r1, r7
    1cc4:	ac f5       	brge	.+106    	; 0x1d30 <async+0x180>
    1cc6:	66 e5       	ldi	r22, 0x56	; 86
    1cc8:	71 e0       	ldi	r23, 0x01	; 1
    1cca:	ce 01       	movw	r24, r28
    1ccc:	0e 94 77 0c 	call	0x18ee	; 0x18ee <enqueueByBaseline>
    1cd0:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1cd4:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1cd8:	30 97       	sbiw	r30, 0x00	; 0
    1cda:	21 f1       	breq	.+72     	; 0x1d24 <async+0x174>
    1cdc:	82 81       	ldd	r24, Z+2	; 0x02
    1cde:	93 81       	ldd	r25, Z+3	; 0x03
    1ce0:	a4 81       	ldd	r26, Z+4	; 0x04
    1ce2:	b5 81       	ldd	r27, Z+5	; 0x05
    1ce4:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    1ce8:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1cec:	2a 17       	cp	r18, r26
    1cee:	3b 07       	cpc	r19, r27
    1cf0:	c9 f4       	brne	.+50     	; 0x1d24 <async+0x174>
    1cf2:	9c 01       	movw	r18, r24
    1cf4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cf8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cfc:	84 1b       	sub	r24, r20
    1cfe:	95 0b       	sbc	r25, r21
    1d00:	01 97       	sbiw	r24, 0x01	; 1
    1d02:	31 f4       	brne	.+12     	; 0x1d10 <async+0x160>
    1d04:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d08:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d0c:	2f 5f       	subi	r18, 0xFF	; 255
    1d0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d10:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1d14:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1d18:	ef e6       	ldi	r30, 0x6F	; 111
    1d1a:	f0 e0       	ldi	r31, 0x00	; 0
    1d1c:	80 81       	ld	r24, Z
    1d1e:	82 60       	ori	r24, 0x02	; 2
    1d20:	80 83       	st	Z, r24
    1d22:	41 c0       	rjmp	.+130    	; 0x1da6 <async+0x1f6>
    1d24:	ef e6       	ldi	r30, 0x6F	; 111
    1d26:	f0 e0       	ldi	r31, 0x00	; 0
    1d28:	80 81       	ld	r24, Z
    1d2a:	8d 7f       	andi	r24, 0xFD	; 253
    1d2c:	80 83       	st	Z, r24
    1d2e:	3b c0       	rjmp	.+118    	; 0x1da6 <async+0x1f6>
    1d30:	68 e5       	ldi	r22, 0x58	; 88
    1d32:	71 e0       	ldi	r23, 0x01	; 1
    1d34:	ce 01       	movw	r24, r28
    1d36:	0e 94 34 0c 	call	0x1868	; 0x1868 <enqueueByDeadline>
    1d3a:	33 20       	and	r3, r3
    1d3c:	b9 f1       	breq	.+110    	; 0x1dac <async+0x1fc>
    1d3e:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <threadPool>
    1d42:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <threadPool+0x1>
    1d46:	00 97       	sbiw	r24, 0x00	; 0
    1d48:	81 f1       	breq	.+96     	; 0x1daa <async+0x1fa>
    1d4a:	e0 91 45 01 	lds	r30, 0x0145	; 0x800145 <activeStack>
    1d4e:	f0 91 46 01 	lds	r31, 0x0146	; 0x800146 <activeStack+0x1>
    1d52:	20 91 58 01 	lds	r18, 0x0158	; 0x800158 <msgQ>
    1d56:	30 91 59 01 	lds	r19, 0x0159	; 0x800159 <msgQ+0x1>
    1d5a:	02 81       	ldd	r16, Z+2	; 0x02
    1d5c:	13 81       	ldd	r17, Z+3	; 0x03
    1d5e:	d9 01       	movw	r26, r18
    1d60:	16 96       	adiw	r26, 0x06	; 6
    1d62:	4d 91       	ld	r20, X+
    1d64:	5d 91       	ld	r21, X+
    1d66:	6d 91       	ld	r22, X+
    1d68:	7c 91       	ld	r23, X
    1d6a:	19 97       	sbiw	r26, 0x09	; 9
    1d6c:	d8 01       	movw	r26, r16
    1d6e:	16 96       	adiw	r26, 0x06	; 6
    1d70:	0d 91       	ld	r16, X+
    1d72:	1d 91       	ld	r17, X+
    1d74:	2d 91       	ld	r18, X+
    1d76:	3c 91       	ld	r19, X
    1d78:	19 97       	sbiw	r26, 0x09	; 9
    1d7a:	40 1b       	sub	r20, r16
    1d7c:	51 0b       	sbc	r21, r17
    1d7e:	62 0b       	sbc	r22, r18
    1d80:	73 0b       	sbc	r23, r19
    1d82:	9a f4       	brpl	.+38     	; 0x1daa <async+0x1fa>
    1d84:	dc 01       	movw	r26, r24
    1d86:	2d 91       	ld	r18, X+
    1d88:	3c 91       	ld	r19, X
    1d8a:	11 97       	sbiw	r26, 0x01	; 1
    1d8c:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <threadPool+0x1>
    1d90:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <threadPool>
    1d94:	ed 93       	st	X+, r30
    1d96:	fc 93       	st	X, r31
    1d98:	90 93 46 01 	sts	0x0146, r25	; 0x800146 <activeStack+0x1>
    1d9c:	80 93 45 01 	sts	0x0145, r24	; 0x800145 <activeStack>
    1da0:	0e 94 41 04 	call	0x882	; 0x882 <dispatch>
    1da4:	02 c0       	rjmp	.+4      	; 0x1daa <async+0x1fa>
    1da6:	33 20       	and	r3, r3
    1da8:	09 f0       	breq	.+2      	; 0x1dac <async+0x1fc>
    1daa:	78 94       	sei
    1dac:	ce 01       	movw	r24, r28
    1dae:	df 91       	pop	r29
    1db0:	cf 91       	pop	r28
    1db2:	1f 91       	pop	r17
    1db4:	0f 91       	pop	r16
    1db6:	ff 90       	pop	r15
    1db8:	ef 90       	pop	r14
    1dba:	df 90       	pop	r13
    1dbc:	cf 90       	pop	r12
    1dbe:	bf 90       	pop	r11
    1dc0:	af 90       	pop	r10
    1dc2:	9f 90       	pop	r9
    1dc4:	8f 90       	pop	r8
    1dc6:	7f 90       	pop	r7
    1dc8:	6f 90       	pop	r6
    1dca:	5f 90       	pop	r5
    1dcc:	4f 90       	pop	r4
    1dce:	3f 90       	pop	r3
    1dd0:	08 95       	ret

00001dd2 <sync>:
    1dd2:	cf 92       	push	r12
    1dd4:	df 92       	push	r13
    1dd6:	ef 92       	push	r14
    1dd8:	ff 92       	push	r15
    1dda:	0f 93       	push	r16
    1ddc:	1f 93       	push	r17
    1dde:	cf 93       	push	r28
    1de0:	df 93       	push	r29
    1de2:	ec 01       	movw	r28, r24
    1de4:	7b 01       	movw	r14, r22
    1de6:	6a 01       	movw	r12, r20
    1de8:	1f b7       	in	r17, 0x3f	; 63
    1dea:	10 78       	andi	r17, 0x80	; 128
    1dec:	f8 94       	cli
    1dee:	a8 81       	ld	r26, Y
    1df0:	b9 81       	ldd	r27, Y+1	; 0x01
    1df2:	10 97       	sbiw	r26, 0x00	; 0
    1df4:	61 f1       	breq	.+88     	; 0x1e4e <sync+0x7c>
    1df6:	14 96       	adiw	r26, 0x04	; 4
    1df8:	ed 91       	ld	r30, X+
    1dfa:	fc 91       	ld	r31, X
    1dfc:	15 97       	sbiw	r26, 0x05	; 5
    1dfe:	30 97       	sbiw	r30, 0x00	; 0
    1e00:	41 f0       	breq	.+16     	; 0x1e12 <sync+0x40>
    1e02:	a0 81       	ld	r26, Z
    1e04:	b1 81       	ldd	r27, Z+1	; 0x01
    1e06:	14 96       	adiw	r26, 0x04	; 4
    1e08:	ed 91       	ld	r30, X+
    1e0a:	fc 91       	ld	r31, X
    1e0c:	15 97       	sbiw	r26, 0x05	; 5
    1e0e:	30 97       	sbiw	r30, 0x00	; 0
    1e10:	c1 f7       	brne	.-16     	; 0x1e02 <sync+0x30>
    1e12:	20 91 43 01 	lds	r18, 0x0143	; 0x800143 <current>
    1e16:	30 91 44 01 	lds	r19, 0x0144	; 0x800144 <current+0x1>
    1e1a:	2a 17       	cp	r18, r26
    1e1c:	3b 07       	cpc	r19, r27
    1e1e:	21 f0       	breq	.+8      	; 0x1e28 <sync+0x56>
    1e20:	11 23       	and	r17, r17
    1e22:	09 f4       	brne	.+2      	; 0x1e26 <sync+0x54>
    1e24:	3d c0       	rjmp	.+122    	; 0x1ea0 <sync+0xce>
    1e26:	07 c0       	rjmp	.+14     	; 0x1e36 <sync+0x64>
    1e28:	11 23       	and	r17, r17
    1e2a:	09 f4       	brne	.+2      	; 0x1e2e <sync+0x5c>
    1e2c:	3c c0       	rjmp	.+120    	; 0x1ea6 <sync+0xd4>
    1e2e:	78 94       	sei
    1e30:	8f ef       	ldi	r24, 0xFF	; 255
    1e32:	9f ef       	ldi	r25, 0xFF	; 255
    1e34:	52 c0       	rjmp	.+164    	; 0x1eda <sync+0x108>
    1e36:	8a 81       	ldd	r24, Y+2	; 0x02
    1e38:	9b 81       	ldd	r25, Y+3	; 0x03
    1e3a:	00 97       	sbiw	r24, 0x00	; 0
    1e3c:	d1 f1       	breq	.+116    	; 0x1eb2 <sync+0xe0>
    1e3e:	fc 01       	movw	r30, r24
    1e40:	15 82       	std	Z+5, r1	; 0x05
    1e42:	14 82       	std	Z+4, r1	; 0x04
    1e44:	36 c0       	rjmp	.+108    	; 0x1eb2 <sync+0xe0>
    1e46:	78 94       	sei
    1e48:	80 e0       	ldi	r24, 0x00	; 0
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	46 c0       	rjmp	.+140    	; 0x1eda <sync+0x108>
    1e4e:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <current>
    1e52:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <current+0x1>
    1e56:	99 83       	std	Y+1, r25	; 0x01
    1e58:	88 83       	st	Y, r24
    1e5a:	11 23       	and	r17, r17
    1e5c:	29 f0       	breq	.+10     	; 0x1e68 <sync+0x96>
    1e5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1e60:	9b 81       	ldd	r25, Y+3	; 0x03
    1e62:	01 97       	sbiw	r24, 0x01	; 1
    1e64:	09 f0       	breq	.+2      	; 0x1e68 <sync+0x96>
    1e66:	78 94       	sei
    1e68:	b6 01       	movw	r22, r12
    1e6a:	ce 01       	movw	r24, r28
    1e6c:	f7 01       	movw	r30, r14
    1e6e:	09 95       	icall
    1e70:	f8 2e       	mov	r15, r24
    1e72:	09 2f       	mov	r16, r25
    1e74:	8f b7       	in	r24, 0x3f	; 63
    1e76:	f8 94       	cli
    1e78:	19 82       	std	Y+1, r1	; 0x01
    1e7a:	18 82       	st	Y, r1
    1e7c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e7e:	9b 81       	ldd	r25, Y+3	; 0x03
    1e80:	82 30       	cpi	r24, 0x02	; 2
    1e82:	91 05       	cpc	r25, r1
    1e84:	38 f0       	brcs	.+14     	; 0x1e94 <sync+0xc2>
    1e86:	1b 82       	std	Y+3, r1	; 0x03
    1e88:	1a 82       	std	Y+2, r1	; 0x02
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	15 82       	std	Z+5, r1	; 0x05
    1e8e:	14 82       	std	Z+4, r1	; 0x04
    1e90:	0e 94 41 04 	call	0x882	; 0x882 <dispatch>
    1e94:	11 23       	and	r17, r17
    1e96:	51 f0       	breq	.+20     	; 0x1eac <sync+0xda>
    1e98:	78 94       	sei
    1e9a:	8f 2d       	mov	r24, r15
    1e9c:	90 2f       	mov	r25, r16
    1e9e:	1d c0       	rjmp	.+58     	; 0x1eda <sync+0x108>
    1ea0:	8f ef       	ldi	r24, 0xFF	; 255
    1ea2:	9f ef       	ldi	r25, 0xFF	; 255
    1ea4:	1a c0       	rjmp	.+52     	; 0x1eda <sync+0x108>
    1ea6:	8f ef       	ldi	r24, 0xFF	; 255
    1ea8:	9f ef       	ldi	r25, 0xFF	; 255
    1eaa:	17 c0       	rjmp	.+46     	; 0x1eda <sync+0x108>
    1eac:	8f 2d       	mov	r24, r15
    1eae:	90 2f       	mov	r25, r16
    1eb0:	14 c0       	rjmp	.+40     	; 0x1eda <sync+0x108>
    1eb2:	3b 83       	std	Y+3, r19	; 0x03
    1eb4:	2a 83       	std	Y+2, r18	; 0x02
    1eb6:	f9 01       	movw	r30, r18
    1eb8:	d5 83       	std	Z+5, r29	; 0x05
    1eba:	c4 83       	std	Z+4, r28	; 0x04
    1ebc:	cd 01       	movw	r24, r26
    1ebe:	0e 94 41 04 	call	0x882	; 0x882 <dispatch>
    1ec2:	e0 91 43 01 	lds	r30, 0x0143	; 0x800143 <current>
    1ec6:	f0 91 44 01 	lds	r31, 0x0144	; 0x800144 <current+0x1>
    1eca:	82 81       	ldd	r24, Z+2	; 0x02
    1ecc:	93 81       	ldd	r25, Z+3	; 0x03
    1ece:	89 2b       	or	r24, r25
    1ed0:	09 f4       	brne	.+2      	; 0x1ed4 <sync+0x102>
    1ed2:	b9 cf       	rjmp	.-142    	; 0x1e46 <sync+0x74>
    1ed4:	f9 83       	std	Y+1, r31	; 0x01
    1ed6:	e8 83       	st	Y, r30
    1ed8:	c2 cf       	rjmp	.-124    	; 0x1e5e <sync+0x8c>
    1eda:	df 91       	pop	r29
    1edc:	cf 91       	pop	r28
    1ede:	1f 91       	pop	r17
    1ee0:	0f 91       	pop	r16
    1ee2:	ff 90       	pop	r15
    1ee4:	ef 90       	pop	r14
    1ee6:	df 90       	pop	r13
    1ee8:	cf 90       	pop	r12
    1eea:	08 95       	ret

00001eec <run>:
    1eec:	00 91 43 01 	lds	r16, 0x0143	; 0x800143 <current>
    1ef0:	10 91 44 01 	lds	r17, 0x0144	; 0x800144 <current+0x1>
    1ef4:	88 e5       	ldi	r24, 0x58	; 88
    1ef6:	91 e0       	ldi	r25, 0x01	; 1
    1ef8:	0e 94 ba 0c 	call	0x1974	; 0x1974 <dequeue>
    1efc:	ec 01       	movw	r28, r24
    1efe:	d8 01       	movw	r26, r16
    1f00:	13 96       	adiw	r26, 0x03	; 3
    1f02:	9c 93       	st	X, r25
    1f04:	8e 93       	st	-X, r24
    1f06:	12 97       	sbiw	r26, 0x02	; 2
    1f08:	78 94       	sei
    1f0a:	4e 85       	ldd	r20, Y+14	; 0x0e
    1f0c:	5f 85       	ldd	r21, Y+15	; 0x0f
    1f0e:	6c 85       	ldd	r22, Y+12	; 0x0c
    1f10:	7d 85       	ldd	r23, Y+13	; 0x0d
    1f12:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f14:	9b 85       	ldd	r25, Y+11	; 0x0b
    1f16:	0e 94 e9 0e 	call	0x1dd2	; 0x1dd2 <sync>
    1f1a:	8f b7       	in	r24, 0x3f	; 63
    1f1c:	f8 94       	cli
    1f1e:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <msgPool>
    1f22:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <msgPool+0x1>
    1f26:	99 83       	std	Y+1, r25	; 0x01
    1f28:	88 83       	st	Y, r24
    1f2a:	d0 93 4a 01 	sts	0x014A, r29	; 0x80014a <msgPool+0x1>
    1f2e:	c0 93 49 01 	sts	0x0149, r28	; 0x800149 <msgPool>
    1f32:	e0 91 45 01 	lds	r30, 0x0145	; 0x800145 <activeStack>
    1f36:	f0 91 46 01 	lds	r31, 0x0146	; 0x800146 <activeStack+0x1>
    1f3a:	00 81       	ld	r16, Z
    1f3c:	11 81       	ldd	r17, Z+1	; 0x01
    1f3e:	e8 01       	movw	r28, r16
    1f40:	2a 81       	ldd	r18, Y+2	; 0x02
    1f42:	3b 81       	ldd	r19, Y+3	; 0x03
    1f44:	a0 91 58 01 	lds	r26, 0x0158	; 0x800158 <msgQ>
    1f48:	b0 91 59 01 	lds	r27, 0x0159	; 0x800159 <msgQ+0x1>
    1f4c:	10 97       	sbiw	r26, 0x00	; 0
    1f4e:	c1 f0       	breq	.+48     	; 0x1f80 <run+0x94>
    1f50:	21 15       	cp	r18, r1
    1f52:	31 05       	cpc	r19, r1
    1f54:	59 f2       	breq	.-106    	; 0x1eec <run>
    1f56:	16 96       	adiw	r26, 0x06	; 6
    1f58:	8d 91       	ld	r24, X+
    1f5a:	9d 91       	ld	r25, X+
    1f5c:	0d 90       	ld	r0, X+
    1f5e:	bc 91       	ld	r27, X
    1f60:	a0 2d       	mov	r26, r0
    1f62:	e9 01       	movw	r28, r18
    1f64:	4e 81       	ldd	r20, Y+6	; 0x06
    1f66:	5f 81       	ldd	r21, Y+7	; 0x07
    1f68:	68 85       	ldd	r22, Y+8	; 0x08
    1f6a:	79 85       	ldd	r23, Y+9	; 0x09
    1f6c:	84 1b       	sub	r24, r20
    1f6e:	95 0b       	sbc	r25, r21
    1f70:	a6 0b       	sbc	r26, r22
    1f72:	b7 0b       	sbc	r27, r23
    1f74:	18 16       	cp	r1, r24
    1f76:	19 06       	cpc	r1, r25
    1f78:	1a 06       	cpc	r1, r26
    1f7a:	1b 06       	cpc	r1, r27
    1f7c:	0c f0       	brlt	.+2      	; 0x1f80 <run+0x94>
    1f7e:	b6 cf       	rjmp	.-148    	; 0x1eec <run>
    1f80:	10 93 46 01 	sts	0x0146, r17	; 0x800146 <activeStack+0x1>
    1f84:	00 93 45 01 	sts	0x0145, r16	; 0x800145 <activeStack>
    1f88:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <threadPool>
    1f8c:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <threadPool+0x1>
    1f90:	91 83       	std	Z+1, r25	; 0x01
    1f92:	80 83       	st	Z, r24
    1f94:	f0 93 48 01 	sts	0x0148, r31	; 0x800148 <threadPool+0x1>
    1f98:	e0 93 47 01 	sts	0x0147, r30	; 0x800147 <threadPool>
    1f9c:	a0 91 45 01 	lds	r26, 0x0145	; 0x800145 <activeStack>
    1fa0:	b0 91 46 01 	lds	r27, 0x0146	; 0x800146 <activeStack+0x1>
    1fa4:	14 96       	adiw	r26, 0x04	; 4
    1fa6:	ed 91       	ld	r30, X+
    1fa8:	fc 91       	ld	r31, X
    1faa:	15 97       	sbiw	r26, 0x05	; 5
    1fac:	30 97       	sbiw	r30, 0x00	; 0
    1fae:	41 f0       	breq	.+16     	; 0x1fc0 <run+0xd4>
    1fb0:	a0 81       	ld	r26, Z
    1fb2:	b1 81       	ldd	r27, Z+1	; 0x01
    1fb4:	14 96       	adiw	r26, 0x04	; 4
    1fb6:	ed 91       	ld	r30, X+
    1fb8:	fc 91       	ld	r31, X
    1fba:	15 97       	sbiw	r26, 0x05	; 5
    1fbc:	30 97       	sbiw	r30, 0x00	; 0
    1fbe:	c1 f7       	brne	.-16     	; 0x1fb0 <run+0xc4>
    1fc0:	cd 01       	movw	r24, r26
    1fc2:	0e 94 41 04 	call	0x882	; 0x882 <dispatch>
    1fc6:	92 cf       	rjmp	.-220    	; 0x1eec <run>

00001fc8 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1fc8:	42 31       	cpi	r20, 0x12	; 18
    1fca:	b8 f4       	brcc	.+46     	; 0x1ffa <install+0x32>
        char status;
        DISABLE(status);
    1fcc:	2f b7       	in	r18, 0x3f	; 63
    1fce:	f8 94       	cli
        otable[i] = obj;
    1fd0:	50 e0       	ldi	r21, 0x00	; 0
    1fd2:	44 0f       	add	r20, r20
    1fd4:	55 1f       	adc	r21, r21
    1fd6:	fa 01       	movw	r30, r20
    1fd8:	e6 5a       	subi	r30, 0xA6	; 166
    1fda:	fe 4f       	sbci	r31, 0xFE	; 254
    1fdc:	91 83       	std	Z+1, r25	; 0x01
    1fde:	80 83       	st	Z, r24
        mtable[i] = m;
    1fe0:	fa 01       	movw	r30, r20
    1fe2:	ee 50       	subi	r30, 0x0E	; 14
    1fe4:	fe 4f       	sbci	r31, 0xFE	; 254
    1fe6:	71 83       	std	Z+1, r23	; 0x01
    1fe8:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1fea:	41 e0       	ldi	r20, 0x01	; 1
    1fec:	50 e0       	ldi	r21, 0x00	; 0
    1fee:	fc 01       	movw	r30, r24
    1ff0:	53 83       	std	Z+3, r21	; 0x03
    1ff2:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1ff4:	22 23       	and	r18, r18
    1ff6:	0c f4       	brge	.+2      	; 0x1ffa <install+0x32>
    1ff8:	78 94       	sei
    1ffa:	08 95       	ret

00001ffc <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1ffc:	8c 01       	movw	r16, r24
    1ffe:	7b 01       	movw	r14, r22
    2000:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    2002:	8f b7       	in	r24, 0x3f	; 63
    2004:	f8 94       	cli
    initialize();
    2006:	0e 94 d6 03 	call	0x7ac	; 0x7ac <initialize>
    ENABLE(1);
    200a:	78 94       	sei
    if (m != NULL)
    200c:	e1 14       	cp	r14, r1
    200e:	f1 04       	cpc	r15, r1
    2010:	41 f0       	breq	.+16     	; 0x2022 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2012:	20 e0       	ldi	r18, 0x00	; 0
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	a9 01       	movw	r20, r18
    2018:	60 e0       	ldi	r22, 0x00	; 0
    201a:	70 e0       	ldi	r23, 0x00	; 0
    201c:	cb 01       	movw	r24, r22
    201e:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <async>
    DISABLE(status);
    2022:	8f b7       	in	r24, 0x3f	; 63
    2024:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    2026:	0e 94 61 04 	call	0x8c2	; 0x8c2 <schedule>
    ENABLE(1);
    202a:	78 94       	sei
    while (1) {
        SLEEP();
    202c:	81 e0       	ldi	r24, 0x01	; 1
    202e:	83 bf       	out	0x33, r24	; 51
    2030:	88 95       	sleep
    2032:	fd cf       	rjmp	.-6      	; 0x202e <tinytimber+0x32>

00002034 <__divmodhi4>:
    2034:	97 fb       	bst	r25, 7
    2036:	07 2e       	mov	r0, r23
    2038:	16 f4       	brtc	.+4      	; 0x203e <__divmodhi4+0xa>
    203a:	00 94       	com	r0
    203c:	07 d0       	rcall	.+14     	; 0x204c <__divmodhi4_neg1>
    203e:	77 fd       	sbrc	r23, 7
    2040:	09 d0       	rcall	.+18     	; 0x2054 <__divmodhi4_neg2>
    2042:	0e 94 2e 10 	call	0x205c	; 0x205c <__udivmodhi4>
    2046:	07 fc       	sbrc	r0, 7
    2048:	05 d0       	rcall	.+10     	; 0x2054 <__divmodhi4_neg2>
    204a:	3e f4       	brtc	.+14     	; 0x205a <__divmodhi4_exit>

0000204c <__divmodhi4_neg1>:
    204c:	90 95       	com	r25
    204e:	81 95       	neg	r24
    2050:	9f 4f       	sbci	r25, 0xFF	; 255
    2052:	08 95       	ret

00002054 <__divmodhi4_neg2>:
    2054:	70 95       	com	r23
    2056:	61 95       	neg	r22
    2058:	7f 4f       	sbci	r23, 0xFF	; 255

0000205a <__divmodhi4_exit>:
    205a:	08 95       	ret

0000205c <__udivmodhi4>:
    205c:	aa 1b       	sub	r26, r26
    205e:	bb 1b       	sub	r27, r27
    2060:	51 e1       	ldi	r21, 0x11	; 17
    2062:	07 c0       	rjmp	.+14     	; 0x2072 <__udivmodhi4_ep>

00002064 <__udivmodhi4_loop>:
    2064:	aa 1f       	adc	r26, r26
    2066:	bb 1f       	adc	r27, r27
    2068:	a6 17       	cp	r26, r22
    206a:	b7 07       	cpc	r27, r23
    206c:	10 f0       	brcs	.+4      	; 0x2072 <__udivmodhi4_ep>
    206e:	a6 1b       	sub	r26, r22
    2070:	b7 0b       	sbc	r27, r23

00002072 <__udivmodhi4_ep>:
    2072:	88 1f       	adc	r24, r24
    2074:	99 1f       	adc	r25, r25
    2076:	5a 95       	dec	r21
    2078:	a9 f7       	brne	.-22     	; 0x2064 <__udivmodhi4_loop>
    207a:	80 95       	com	r24
    207c:	90 95       	com	r25
    207e:	bc 01       	movw	r22, r24
    2080:	cd 01       	movw	r24, r26
    2082:	08 95       	ret

00002084 <setjmp>:
    2084:	dc 01       	movw	r26, r24
    2086:	2d 92       	st	X+, r2
    2088:	3d 92       	st	X+, r3
    208a:	4d 92       	st	X+, r4
    208c:	5d 92       	st	X+, r5
    208e:	6d 92       	st	X+, r6
    2090:	7d 92       	st	X+, r7
    2092:	8d 92       	st	X+, r8
    2094:	9d 92       	st	X+, r9
    2096:	ad 92       	st	X+, r10
    2098:	bd 92       	st	X+, r11
    209a:	cd 92       	st	X+, r12
    209c:	dd 92       	st	X+, r13
    209e:	ed 92       	st	X+, r14
    20a0:	fd 92       	st	X+, r15
    20a2:	0d 93       	st	X+, r16
    20a4:	1d 93       	st	X+, r17
    20a6:	cd 93       	st	X+, r28
    20a8:	dd 93       	st	X+, r29
    20aa:	ff 91       	pop	r31
    20ac:	ef 91       	pop	r30
    20ae:	8d b7       	in	r24, 0x3d	; 61
    20b0:	8d 93       	st	X+, r24
    20b2:	8e b7       	in	r24, 0x3e	; 62
    20b4:	8d 93       	st	X+, r24
    20b6:	8f b7       	in	r24, 0x3f	; 63
    20b8:	8d 93       	st	X+, r24
    20ba:	ed 93       	st	X+, r30
    20bc:	fd 93       	st	X+, r31
    20be:	88 27       	eor	r24, r24
    20c0:	99 27       	eor	r25, r25
    20c2:	09 94       	ijmp

000020c4 <longjmp>:
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	81 30       	cpi	r24, 0x01	; 1
    20ca:	91 05       	cpc	r25, r1
    20cc:	81 1d       	adc	r24, r1
    20ce:	2d 90       	ld	r2, X+
    20d0:	3d 90       	ld	r3, X+
    20d2:	4d 90       	ld	r4, X+
    20d4:	5d 90       	ld	r5, X+
    20d6:	6d 90       	ld	r6, X+
    20d8:	7d 90       	ld	r7, X+
    20da:	8d 90       	ld	r8, X+
    20dc:	9d 90       	ld	r9, X+
    20de:	ad 90       	ld	r10, X+
    20e0:	bd 90       	ld	r11, X+
    20e2:	cd 90       	ld	r12, X+
    20e4:	dd 90       	ld	r13, X+
    20e6:	ed 90       	ld	r14, X+
    20e8:	fd 90       	ld	r15, X+
    20ea:	0d 91       	ld	r16, X+
    20ec:	1d 91       	ld	r17, X+
    20ee:	cd 91       	ld	r28, X+
    20f0:	dd 91       	ld	r29, X+
    20f2:	ed 91       	ld	r30, X+
    20f4:	fd 91       	ld	r31, X+
    20f6:	0d 90       	ld	r0, X+
    20f8:	f8 94       	cli
    20fa:	fe bf       	out	0x3e, r31	; 62
    20fc:	0f be       	out	0x3f, r0	; 63
    20fe:	ed bf       	out	0x3d, r30	; 61
    2100:	ed 91       	ld	r30, X+
    2102:	fd 91       	ld	r31, X+
    2104:	09 94       	ijmp

00002106 <_exit>:
    2106:	f8 94       	cli

00002108 <__stop_program>:
    2108:	ff cf       	rjmp	.-2      	; 0x2108 <__stop_program>
